describe("Ext.data.validator.Format",function(){var B;function A(D,C){B=new Ext.data.validator.Format({matcher:C});return B.validate(D)}afterEach(function(){B=null});it("should throw an exception if a matcher is not configured",function(){expect(function(){B=new Ext.data.validator.Format()}).toThrow()});describe("invalid values",function(){it("should not validate if the value does match the matcher re",function(){expect(A("foo",/^bar$/)).toBe(B.getMessage())})});describe("valid values",function(){it("should validate if the value matches the matcher re",function(){expect(A("bar",/^bar$/)).toBe(true)})});describe("messages",function(){it("should accept a custom message",function(){B=new Ext.data.validator.Format({message:"Foo",matcher:/^foo$/});expect(B.validate("bar")).toBe("Foo")})});describe("runtime changes",function(){it("should be able to have a new matcher applied",function(){B=new Ext.data.validator.Format({matcher:/^foo/});expect(B.validate("bar")).toBe(B.getMessage());B.setMatcher(/^bar/);expect(B.validate("bar")).toBe(true)})})});