describe("Ext.event.gesture.LongPress",function(){var A=Ext.event.gesture.LongPress,B;describe("constructor()",function(){});describe("members",function(){beforeEach(function(){})});(Ext.isIE8?xdescribe:describe)("scenarios",function(){beforeEach(function(){B=new A();spyOn(B,"fail").andCallThrough()});it("should FAIL if there are more than 1 touches in touchstart initially",function(){Ext.testHelper.recognize(B,[{type:"touchstart",touches:[{},{}],changedTouches:[{},{}]},{type:"touchmove",touches:[{},{}],changedTouches:[{},{}]},{type:"touchend",changedTouches:[{},{}]}]);expect(B.fail).toHaveBeenCalledWith(A.NOT_SINGLE_TOUCH)});it("should FAIL if there is another touchstart after the first one",function(){Ext.testHelper.recognize(B,[{type:"touchstart",touches:[{}],changedTouches:[{}]},{type:"touchstart",touches:[{},{}],changedTouches:[{}]},{type:"touchmove",touches:[{},{}],changedTouches:[{},{}]},{type:"touchend",changedTouches:[{},{}]}]);expect(B.fail).toHaveBeenCalledWith(A.NOT_SINGLE_TOUCH)});it("should FAIL if touchend happens before minDuration",function(){Ext.testHelper.recognize(B,[{type:"touchstart",touches:[{}],changedTouches:[{}]},{type:"touchend",changedTouches:[{}]}]);expect(B.fail).toHaveBeenCalledWith(A.DURATION_NOT_ENOUGH)});it("should PASS if there's no touchend happens before minDuration expires",function(){var D,C;runs(function(){B.setMinDuration(10);spyOn(B,"fire");var E=Ext.testHelper.recognize(B,[{type:"touchstart",touches:[{}],changedTouches:[{}]}]);D=E[0];C=D.changedTouches[0]});waits(20);runs(function(){expect(B.fire).toHaveBeenCalledWith("longpress",D,{touch:C,duration:10});expect(B.fire.callCount).toBe(1)})})});describe("functional specs",function(){var M=Ext.testHelper,J=Ext.event.Dispatcher.getInstance().getPublisher("gesture").getRecognizers().longPress,I=J.getMinDuration(),L=J.getMoveDistance(),C=30,N,H,F,K,G;function E(P){M.touchStart(N,P)}function D(P){M.touchMove(N,P)}function O(P){M.touchEnd(N,P)}beforeEach(function(){N=Ext.getBody().createChild({});J.setMinDuration(C);H=jasmine.createSpy();F=jasmine.createSpy();H.andCallFake(function(P){K=P});F.andCallFake(function(P){G=P});N.on("longpress",H);N.on("taphold",F)});afterEach(function(){J.setMinDuration(I);N.destroy()});it("should fire longpress and taphold when the hold duration is longer than minDuration",function(){runs(function(){E({id:1,x:10,y:10})});waits(C+10);runs(function(){O({id:1,x:10,y:10});expect(H).toHaveBeenCalled();expect(K.type).toBe("longpress");expect(F).toHaveBeenCalled();expect(G.type).toBe("taphold");expect(K.duration).toBe(C);expect(G.duration).toBe(C)})});it("should not fire longpress and taphold when the hold duration is shorter than minDuration",function(){runs(function(){E({id:1,x:10,y:10})});waits(C-10);runs(function(){O({id:1,x:10,y:10});expect(H).not.toHaveBeenCalled();expect(F).not.toHaveBeenCalled()});waitsForAnimation()});it("should not fire longpress and taphold if the amount of movement exceeds moveDistance",function(){runs(function(){E({id:1,x:10,y:10});D({id:1,x:10,y:10+L})});waits(C+10);runs(function(){O({id:1,x:10,y:10+L});expect(H).not.toHaveBeenCalled();expect(F).not.toHaveBeenCalled()});waitsForAnimation()});it("should fire longpress and taphold if the amount of movement is within moveDistance",function(){runs(function(){E({id:1,x:10,y:10});D({id:1,x:10,y:9+L})});waits(C+10);runs(function(){O({id:1,x:10,y:9+L});expect(H).toHaveBeenCalled();expect(F).toHaveBeenCalled()});waitsForAnimation()});if(Ext.supports.Touch){it("should not fire longpress and taphold if a second touch is initiated",function(){runs(function(){E({id:1,x:10,y:10});E({id:2,x:20,y:20})});waits(C+10);runs(function(){O({id:1,x:10,y:10});O({id:2,x:20,y:20});expect(H).not.toHaveBeenCalled();expect(F).not.toHaveBeenCalled()});waitsForAnimation()})}})});