describe("Ext.data.validator.Email",function(){var B;function A(C){B=new Ext.data.validator.Email();return B.validate(C)}afterEach(function(){B=null});describe("invalid values",function(){it("should not validate if the value is undefined",function(){expect(A(undefined)).toBe(B.getMessage())});it("should not validate if the value is null",function(){expect(A(null)).toBe(B.getMessage())});it("should not validate if the value is an empty string",function(){expect(A("")).toBe(B.getMessage())});it("should not validate if the value doesn't contain @",function(){expect(A("foobar.com")).toBe(B.getMessage())});it("should not validate if the value doesn't contain a domain",function(){expect(A("foo@bar")).toBe(B.getMessage())})});describe("valid values",function(){it("should validate an email",function(){expect(A("support@sencha.com")).toBe(true)})});describe("messages",function(){it("should accept a custom message",function(){B=new Ext.data.validator.Email({message:"Foo"});expect(B.validate(undefined)).toBe("Foo")})})});