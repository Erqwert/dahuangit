describe("Ext.direct.JsonProvider",function(){var A,B=[{type:"event",name:"foo",data:{foo:"bar"}},{type:"event",name:"bar",data:null},{type:"event",name:"baz",data:["foo","bar"]},{type:"event",name:"qux",data:"plugh"}];beforeEach(function(){A=new Ext.direct.JsonProvider({id:"foo"})});it("should parse encoded responses",function(){var D,E,C=[];D=Ext.encode(B);E=A.createEvents({responseText:D});Ext.Array.each(E,function(F){C.push({type:F.type,name:F.getName(),data:F.getData()})});expect(C).toEqual(B)});it("should handle already decoded responses",function(){var D,C;D=A.createEvents({responseText:Ext.merge({},B[0])});C={type:D[0].type,name:D[0].getName(),data:D[0].getData()};expect(C).toEqual(B[0])});it("should handle empty responses",function(){var C=A.createEvents({responseText:[]});expect(C).toEqual([])});it("should handle invalid responses",function(){var D,E,C;D={responseText:"blow up!"};E=A.createEvents(D);C={status:E[0].status,xhr:E[0].xhr,code:E[0].code,message:E[0].message};expect(C).toEqual({status:false,xhr:D,code:Ext.direct.Manager.exceptions.PARSE,message:"Error parsing json response: \n\n Ext.JSON.decode(): You're trying to decode an invalid JSON String: blow up!"})})});