describe("Ext.direct.RemotingProvider",function(){var A=Ext.direct.RemotingProvider,B,E={actions:{"TestAction":[{len:1,name:"echo"},{len:1,name:"directFail"},{len:0,name:"directForm",formHandler:true}],"TestAction.Foo":[{len:0,name:"foo"}],"TestAction.Foo.Bar":[{len:0,name:"bar"}],"TestAction.Foo.Bar.Baz":[{len:0,name:"baz"}],"TestAction.Foo.Qux":[{len:0,name:"qux"}]},namespace:"Direct.foo.bar",type:"remoting",url:"/router",id:"foo"},C={echo:function(F){return F},directFail:function(F){return{type:"exception"}},directForm:function(F){return{success:true,data:F}},foo:function(){return"foo"},bar:function(){return"bar"},baz:function(){return"baz"},qux:function(){return"qux"}};function D(T){var F=T.callback,L=T.scope,J=T.transaction,H=T.form!==undefined,M=T.isUpload,W={},U,N,R,I,W,V,S,G,P,O,K;if(H){U=T.params;N=U.extTID;R=U.extAction;I=U.extMethod;Ext.fly(T.form).select("input").each(function(X,Z,Y){this[X.dom.name]=X.dom.value},W);W=[W]}else{U=T.jsonData;N=U.tid;R=U.action;I=U.method;W=U.data||[]}V=C[I];if(T.timeout===666){P={type:"exception",tid:N,message:"Can't connect to the server"};S=false}else{try{G=V.apply({},W);P={type:"rpc",tid:N,action:R,method:I,result:G}}catch(Q){P={type:"exception",tid:N,message:Q.toString(),where:"internal"}}S=true}O={responseText:Ext.encode(P)};K={transaction:J};Ext.callback(F,L,[K,S,O],1)}beforeEach(function(){B=new A(E)});afterEach(function(){B=undefined;try{delete window.Direct}catch(F){window.Direct=undefined}});describe("handles namespaces:",function(){var F;it("creates namespace for itself if passed a string",function(){expect(Direct.foo.bar).toBeDefined()});it("doesn't create nested objects until it's connected",function(){expect(Direct.foo.bar).toEqual({})});describe("creates nested namespaces after it's connected:",function(){beforeEach(function(){B.connect();F=Direct.foo.bar});it("creates TestAction",function(){expect(F.TestAction).toBeDefined()});it("creates TestAction.Foo",function(){expect(F.TestAction.Foo).toBeDefined()});it("creates TestAction.Foo.Bar",function(){expect(F.TestAction.Foo.Bar).toBeDefined()});it("creates TestAction.Foo.Bar.Baz",function(){expect(F.TestAction.Foo.Bar.Baz).toBeDefined()});it("creates TestAction.Foo.Qux",function(){expect(F.TestAction.Foo.Qux).toBeDefined()})});describe("handles nested namespaces the old way:",function(){beforeEach(function(){B.disableNestedActions=true;B.connect();F=Direct.foo.bar});it("creates TestAction",function(){expect(F.TestAction).toBeDefined()});it("creates TestAction.Foo",function(){expect(F["TestAction.Foo"]).toBeDefined();expect(F.TestAction.Foo).not.toBeDefined()});it("creates TestAction.Foo.Bar",function(){expect(F["TestAction.Foo.Bar"]).toBeDefined()});it("creates TestAction.Foo.Bar.Baz",function(){expect(F["TestAction.Foo.Bar.Baz"]).toBeDefined()});it("creates TestAction.Foo.Qux",function(){expect(F["TestAction.Foo.Qux"]).toBeDefined()})})});describe("handles remoting methods:",function(){var F;function G(H){expect(Ext.isFunction(H)).toBeTruthy()}beforeEach(function(){B.connect();F=Direct.foo.bar});it("has Foo.foo",function(){G(F.TestAction.Foo.foo)});it("has Foo.Bar.bar",function(){G(F.TestAction.Foo.Bar.bar)});it("has Foo.Bar.Baz.baz",function(){G(F.TestAction.Foo.Bar.Baz.baz)});it("has Foo.Qux.qux",function(){G(F.TestAction.Foo.Qux.qux)})});describe("runs remoting methods:",function(){var G,N,K,I;function F(Q,R){this.echo=R.status}function L(Q,R){if(R.status){this.echo=Q}}function O(Q,R){this.echo=R.result}function J(R,T,Q,S){if(Q){this.echo=R;this.options=S}}function M(){return false}function P(){return Ext.isDefined(this.echo)}function H(){return !!I.callCount}beforeEach(function(){N=undefined;K=undefined;spyOn(Ext.Ajax,"request").andCallFake(D);B.connect();G=Direct.foo.bar;I=jasmine.createSpy("event handler")});afterEach(function(){I=undefined});describe("handles call mechanics",function(){describe("call batching",function(){it("should batch calls within specified enableBuffer timeout",function(){var Q,R;runs(function(){Ext.Ajax.request.andCallFake(function(S){Q=S});R=Ext.direct.Transaction.TRANSACTION_ID;G.TestAction.echo("foo",Ext.emptyFn);G.TestAction.echo("bar",Ext.emptyFn)});waitsFor(function(){return !!Q},"options never modified",20);runs(function(){expect(Q.jsonData).toEqual([{action:"TestAction",method:"echo",type:"rpc",tid:R+1,data:["foo"]},{action:"TestAction",method:"echo",type:"rpc",tid:R+2,data:["bar"]}])})});it("should run calls with specified timeout w/o batching",function(){var Q=[],R;runs(function(){Ext.Ajax.request.andCallFake(function(S){Q.push(S)});B.enableBuffer=200;R=Ext.direct.Transaction.TRANSACTION_ID;G.TestAction.echo("baz",Ext.emptyFn);G.TestAction.echo("qux",Ext.emptyFn,this,{timeout:1})});waitsFor(function(){return !!Q},"options never modified",20);runs(function(){expect(Q.length).toBe(1);expect(Q[0].jsonData).toEqual({action:"TestAction",method:"echo",type:"rpc",tid:R+2,data:["qux"]})})});it("should run calls instantly with enableBuffer = false",function(){var Q,R;Ext.Ajax.request.andCallFake(function(S){K=S});B.enableBuffer=false;R=Ext.direct.Transaction.TRANSACTION_ID;G.TestAction.echo("fred",Ext.emptyFn);expect(K.jsonData).toEqual({action:"TestAction",method:"echo",type:"rpc",tid:R+1,data:["fred"]})})});describe("call related events",function(){it("fires 'beforecall' event",function(){runs(function(){B.on("beforecall",I);G.TestAction.echo("fred",Ext.emptyFn)});waitsFor(H,"event handler never fired",20);runs(function(){expect(I).toHaveBeenCalled()});waits(35)});it("fires 'call' event",function(){runs(function(){B.on("call",I);G.TestAction.echo("plugh",Ext.emptyFn)});waitsFor(H,"event handler never fired",20);runs(function(){expect(I).toHaveBeenCalled()});waits(35)});it("cancels request when 'beforecall' handler returns false",function(){runs(function(){I.andCallFake(M);B.on("beforecall",I);G.TestAction.echo("mymse",Ext.emptyFn)});waitsFor(H,"event handler never fired",200);waits(20);runs(function(){expect(K).toBeUndefined()});waits(35)})})});describe("with connection failed",function(){it("retries failed transactions",function(){var Q=Ext.direct.Transaction.prototype;runs(function(){spyOn(Q,"retry").andCallThrough();G.TestAction.echo("foo",Ext.emptyFn,this,{timeout:666})});waitsFor(function(){return Q.retry.callCount===1},"transaction.retry() never called",200);runs(function(){expect(Q.retry).toHaveBeenCalled()})});it("fires exception when retry count is exceeded",function(){runs(function(){B.on("data",I);G.TestAction.echo("bar",Ext.emptyFn,this,{timeout:666})});waitsFor(H,"event handler never fired",200);runs(function(){expect(I).toHaveBeenCalled()})});describe("handles callback:",function(){it("fires 'beforecallback' event",function(){runs(function(){B.on("beforecallback",I);G.TestAction.echo("baz",Ext.emptyFn,this,{timeout:666})});waitsFor(H,"event handler never fired",200);runs(function(){expect(I).toHaveBeenCalled()})});it("cancels callback when 'beforecallback' handler returns false",function(){var Q=jasmine.createSpy("callback");runs(function(){I.andCallFake(M);B.on("beforecallback",I);G.TestAction.echo("qux",Q,this,{timeout:666})});waitsFor(H,"event handler never fired",200);waits(20);runs(function(){expect(I).toHaveBeenCalled();expect(Q).not.toHaveBeenCalled()})});it("fires callback when retry count is exceeded",function(){runs(function(){G.TestAction.echo("plugh",F,this,{timeout:666})});waitsFor(P,"callback never fired",200);runs(function(){expect(this.echo).toBe(false)})})})});describe("successfully connected:",function(){it("fires 'data' event",function(){runs(function(){B.on("data",I);G.TestAction.echo("foo",L,this)});waitsFor(P,"callback never fired",200);runs(function(){expect(I).toHaveBeenCalled()})});describe("handles callback:",function(){it("fires 'beforecallback' event",function(){runs(function(){B.on("beforecallback",I);G.TestAction.echo("foo",L,this)});waitsFor(P,"event handler never fired",100);runs(function(){expect(I).toHaveBeenCalled()})});it("cancels callback when 'beforecallback' handler returns false",function(){var Q=jasmine.createSpy("callback");runs(function(){I.andCallFake(M);B.on("beforecallback",I);G.TestAction.echo("bar",Q,this)});waitsFor(H,"event handler never fired",100);waits(20);runs(function(){expect(I).toHaveBeenCalled();expect(Q).not.toHaveBeenCalled()})});it("runs w/o additional options",function(){runs(function(){G.TestAction.echo("foo",L,this)});waitsFor(P,"callback never fired",100);runs(function(){expect(this.echo).toEqual("foo")})});it("runs w/ additional options",function(){runs(function(){G.TestAction.echo("bar",J,this,{victory:"Huzzah!"})});waitsFor(P,"callback never fired",100);runs(function(){expect(this.echo).toEqual("bar");expect(this.options).toBeDefined();expect(this.options.victory).toEqual("Huzzah!")})});it("runs in nested namespaces",function(){runs(function(){G.TestAction.Foo.foo(L,this)});waitsFor(P,"callback never fired",100);runs(function(){expect(this.echo).toEqual("foo")})});it("runs in deeply nested namespaces",function(){runs(function(){G.TestAction.Foo.Bar.bar(L,this)});waitsFor(P,"callback never fired",100);runs(function(){expect(this.echo).toEqual("bar")})});it("runs in really truly deeply nested namespaces",function(){runs(function(){G.TestAction.Foo.Bar.Baz.baz(L,this)});waitsFor(P,"callback never fired");runs(function(){expect(this.echo).toEqual("baz")})})})});describe("form calls:",function(){var Q;function R(S){S=Ext.apply({xtype:"form",renderTo:document.body,width:300,height:200,layout:"form",api:{submit:"Direct.foo.bar.TestAction.directForm"},items:[{xtype:"hiddenfield",name:"hidden_foo",value:"hide the sacred foo from infoodels!"},{xtype:"textfield",name:"overt_foo",value:"behold the false, deceitful overt foo"}]},S);Q=Ext.widget(S)}beforeEach(function(){R()});afterEach(function(){if(Q){Q.destroy()}});describe("submit",function(){it("should pass field values to direct fn",function(){runs(function(){Q.submit({success:O,scope:this})});waitsFor(P,"callback that never fired",2000);runs(function(){expect(this.echo).toEqual({success:true,data:{hidden_foo:"hide the sacred foo from infoodels!",overt_foo:"behold the false, deceitful overt foo"}})})});it("should pass extra params to direct fn",function(){runs(function(){Q.submit({params:{simple_foo:"barf!"},success:O,scope:this})});waitsFor(P,"callback that never fired",2000);runs(function(){expect(this.echo).toEqual({success:true,data:{hidden_foo:"hide the sacred foo from infoodels!",overt_foo:"behold the false, deceitful overt foo",simple_foo:"barf!"}})})});it("should pass form baseParams to direct fn",function(){runs(function(){Q.getForm().baseParams={MEGA_FOO:"ALL YOUR FOO ARE BELONG TO US!"};Q.submit({success:O,scope:this})});waitsFor(P,"callback that never fired",2000);runs(function(){expect(this.echo).toEqual({success:true,data:{hidden_foo:"hide the sacred foo from infoodels!",overt_foo:"behold the false, deceitful overt foo",MEGA_FOO:"ALL YOUR FOO ARE BELONG TO US!"}})})})})})})});