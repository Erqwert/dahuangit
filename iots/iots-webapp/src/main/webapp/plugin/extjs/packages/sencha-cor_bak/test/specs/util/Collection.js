describe("Ext.util.Collection",function(){var C,B={};function A(D,F,E){E=E||"id";D.on({beginupdate:function(G){expect(G===D).toBe(true);F.push("beginupdate")},add:function(G,H){expect(G===D).toBe(true);F.push("add "+Ext.encode(Ext.Array.pluck(H.items,E))+" at "+H.at);if(H.keys){F[F.length-1]+=" w/keys "+Ext.encode(H.keys)}},remove:function(G,H){expect(G===D).toBe(true);F.push("remove "+Ext.encode(Ext.Array.pluck(H.items,E))+" at "+H.at);if(H.keys){F[F.length-1]+=" w/keys "+Ext.encode(H.keys)}},endupdate:function(G){expect(G===D).toBe(true);F.push("endupdate")}})}describe("constructor",function(){it("should provide a default getKey implementation",function(){C=new Ext.util.Collection();var D={id:1,data:"first item"},E={id:2,data:"second item"};C.add(D);C.add(E);expect(C.get(1)).toBe(D);expect(C.get(2)).toBe(E)});it("should allow a custom getKey implementation",function(){C=new Ext.util.Collection({keyFn:function(F){return F.myKey}});var D={myKey:"a",data:"first item"},E={myKey:"b",data:"second item"};C.add(D,E);expect(C.get("a")).toBe(D);expect(C.get("b")).toBe(E)});it("should contain the source items when configured with a source",function(){var D=new Ext.util.Collection();D.add({id:1},{id:2},{id:3});C=new Ext.util.Collection({source:D});expect(C.getCount()).toBe(3)})});describe("iterators",function(){var E,D,F,G,H;beforeEach(function(){C=new Ext.util.Collection();E=jasmine.createSpy("fn");F={id:1,name:"first"};G={id:2,name:"second"};H={id:3,name:"third"};C.add([F,G,H])});describe("each",function(){it("should call with the correct scope",function(){C.each(function(){D=this},B);expect(D).toBe(B)});it("should call the correct number of times",function(){C.each(E);expect(E.callCount).toBe(3)});it("should be called with each item",function(){C.each(E);expect(E).toHaveBeenCalledWith(F,0,3);expect(E).toHaveBeenCalledWith(G,1,3);expect(E).toHaveBeenCalledWith(H,2,3)})});describe("eachKey",function(){it("should be called with the correct scope",function(){C.eachKey(function(){D=this},B);expect(D).toBe(B)});it("should call the correct number of times",function(){C.eachKey(E);expect(E.callCount).toBe(3)});it("should be called with each key",function(){C.eachKey(E);expect(E).toHaveBeenCalledWith(1,F,0,3);expect(E).toHaveBeenCalledWith(2,G,1,3);expect(E).toHaveBeenCalledWith(3,H,2,3)})})});describe("adding items",function(){beforeEach(function(){C=new Ext.util.Collection()});it("should get the correct count when adding an array",function(){C.add([{id:1},{id:2}]);expect(C.getCount()).toBe(2);expect(C.length).toBe(2)});it("should get the correct count when adding varargs",function(){C.add({id:1},{id:2});expect(C.getCount()).toBe(2);expect(C.length).toBe(2)});it("should get the correct count when adding sequentially",function(){C.add({id:1});C.add({id:2});expect(C.getCount()).toBe(2);expect(C.length).toBe(2)});it("should fire the add event",function(){var D=false;C.on("add",function(){D=true});C.add({id:1});expect(D).toBe(true)});describe("with replaceAll",function(){it("should add when the collection is empty",function(){C.replaceAll({id:1});expect(C.getCount()).toBe(1)});it("should remove all existing items",function(){var D={id:4};C.add({id:1},{id:2},{id:3});C.replaceAll(D);expect(C.getCount()).toBe(1);expect(C.first()).toBe(D)});it("should remove even when no items are added",function(){C.add({id:1},{id:2},{id:3});C.setDecoder(function(){return false});C.replaceAll({id:4});expect(C.getCount()).toBe(0)})})});describe("removing items",function(){var F={id:1,name:"one"},D={id:2,name:"two"},E={id:3,name:"three"},K={id:4,name:"four"},L={id:5,name:"five"},I={id:6,name:"six"},J={id:7,name:"seven"},G={id:8,name:"eight"},H={id:9,name:"nine"};beforeEach(function(){C=new Ext.util.Collection();C.add([F,D,E,K,L,I,J,G,H])});describe("remove",function(){it("should remove a single item",function(){C.remove(F);expect(C.getCount()).toBe(8)});it("should return the removed item count",function(){expect(C.remove(F)).toBe(1)});it("should the passed items array",function(){C.remove([D,E]);expect(C.getCount()).toBe(7)});it("should fire the remove event when passing items array",function(){var M=[],N=[];C.on("remove",function(P,O){M.push(P);N.push(O)});C.remove([D,E,I]);expect(M.length).toBe(2);expect(M[0]===C).toBe(true);expect(M[1]===C).toBe(true);expect(N[0].at).toBe(5);expect(N[0].items.length).toBe(1);expect(N[0].items[0]).toBe(I);expect(N[0].keys.length).toBe(1);expect(N[0].keys[0]).toBe(6);expect(N[1].at).toBe(1);expect(N[1].items.length).toBe(2);expect(N[1].items[0]).toBe(D);expect(N[1].items[1]).toBe(E);expect(N[1].keys.length).toBe(2);expect(N[1].keys[0]).toBe(2);expect(N[1].keys[1]).toBe(3)});it("should return 0 if no item was found",function(){expect(C.remove({id:0})).toBe(0)});it("should fire the remove event",function(){var M,N;C.on("remove",function(P,O){M=P;N=O});C.remove(F);expect(M).toBe(C);expect(N.at).toBe(0);expect(N.items.length).toBe(1);expect(N.items[0]).toBe(F)});it("should only fire a single event if the items are in a large contiguous range",function(){var O=jasmine.createSpy(),N=[],M;for(M=0;M<1000;++M){N.push({id:M+1})}C.add(N);C.on("remove",O);C.remove(C.getRange());expect(O.callCount).toBe(1)})});describe("removeAt",function(){it("should remove a single item",function(){C.removeAt(1);expect(C.getCount()).toBe(8)});it("should return the removed item",function(){expect(C.removeAt(1)).toBe(D)});it("should return false if no item was found",function(){expect(C.removeAt(9)).toBeFalsy()});describe("event",function(){it("should fire the remove event",function(){var M,N;C.on("remove",function(P,O){M=P;N=O});C.removeAt(1);expect(M).toBe(C);expect(N.at).toBe(1);expect(N.items.length).toBe(1);expect(N.items[0]).toBe(D);expect(N.keys.length).toBe(1);expect(N.keys[0]).toBe(2)});it("should update the collection during a remove",function(){var M,N;C.on("remove",function(){M=C.getCount();N=C.getByKey(1)});C.removeAt(0);expect(M).toBe(8);expect(N).toBeUndefined()})});describe("when filtered",function(){it("should remove the correct item with an all inclusive filter",function(){C.getFilters().add(function(){return true});C.removeAt(1);expect(C.getAt(0)).toBe(F);expect(C.getAt(1)).toBe(E);expect(C.getCount()).toBe(8)})})});describe("bulkRemove",function(){it("should limit the length to that of the collection",function(){C.removeAt(4,100);expect(C.getCount()).toBe(4)});it("should remove the correct items",function(){C.removeAt(3,2);expect(C.getCount()).toBe(7);expect(C.getAt(2)).toBe(E);expect(C.getAt(3)).toBe(I)})});describe("removeByKey",function(){it("should remove a single item",function(){C.removeByKey(1);expect(C.getCount()).toBe(8)});it("should return the removed item",function(){expect(C.removeByKey(1)).toBe(F)});it("should return false if no item was found",function(){expect(C.removeByKey(10)).toBeFalsy()});it("should fire the remove event",function(){var M,N;C.on("remove",function(P,O){M=P;N=O});C.removeByKey(2);expect(M).toBe(C);expect(N.at).toBe(1);expect(N.items.length).toBe(1);expect(N.items[0]).toBe(D);expect(N.keys.length).toBe(1);expect(N.keys[0]).toBe(2)})});describe("removeAll",function(){it("should remove all items",function(){C.removeAll();expect(C.getCount()).toBe(0)});it("should fire the remove event with no passed items",function(){var M=0,N,O;C.on("remove",function(Q,P){N=Q;O=P;++M});C.removeAll();expect(M).toBe(1);expect(N).toBe(C);expect(O.at).toBe(0);expect(O.items.length).toBe(9);expect(O.items).toEqual([F,D,E,K,L,I,J,G,H]);expect(O.keys.length).toBe(9);expect(O.keys).toEqual([1,2,3,4,5,6,7,8,9])})})});describe("clearing items",function(){beforeEach(function(){C=new Ext.util.Collection();C.add([{id:1},{id:2}])});it("should remove all items",function(){expect(C.length).toBe(2);C.clear();expect(C.length).toBe(0)});it("should not fire the remove event",function(){var D=0;C.on("remove",function(){++D});C.clear();expect(D).toBe(0)})});describe("determining insertion index in a sorted Collection",function(){var F={id:2,name:"Michael"},D={id:3,name:"Yanto"},E={id:1,name:"Bill"},J={id:4,name:"Albert"},K={id:5,name:"Fred"},H={id:6,name:"Robert"},I={id:7,name:"Zebedee"};beforeEach(function(){C=new Ext.util.Collection();C.add([F,D,E])});function G(L){C.add(L);var M=C.indexOf(L);C.remove(L);return M}describe("Sorted ascending",function(){it("should find correct insertion indices",function(){C.sort("name");expect(G(J)).toBe(0);expect(G(K)).toBe(1);expect(G(H)).toBe(2);expect(G(I)).toBe(3)})});describe("Sorted descending",function(){it("should find correct insertion indices",function(){C.sort("name","DESC");expect(G(J)).toBe(3);expect(G(K)).toBe(2);expect(G(H)).toBe(1);expect(G(I)).toBe(0)})})});describe("an existing Collection",function(){var F={id:1,name:"first"},D={id:2,name:"second"},E={id:3,name:"third"},L={id:4,name:"fourth"},M={id:5,name:"fifth"},J={id:6,name:"sixth"},K={id:7,name:"seventh"},G={id:8,name:"eighth"},H={id:9,name:"ninth"};var I=function(){C.clear();C.add([F,D,E,L,M,J,K,G,H])};beforeEach(function(){C=new Ext.util.Collection();C.add([F,D,E])});describe("updateKey",function(){it("should do nothing if the old key doesn't exist",function(){C.updateKey(F,"bar");expect(C.getByKey("bar")).toBeUndefined()});it("should update the key for the item",function(){var N=Ext.apply({},F);C.clear();C.add(N,D,E);N.id=20;C.updateKey(N,1);expect(C.getByKey(1)).toBeUndefined();expect(C.getByKey(20)).toBe(N);expect(C.indexOfKey(1)).toBe(-1);expect(C.indexOfKey(20)).toBe(0)})});describe("inserting items",function(){it("should insert a new item",function(){var N=C.getCount();C.insert(0,L);expect(C.getCount()).toBe(N+1)});it("should fire the add event",function(){var N=0,O,P;C.on("add",function(Q,R){++N;O=Q;P=R});C.insert(0,L);expect(N).toBe(1);expect(O).toBe(C);expect(P.at).toBe(0);expect(P.items.length).toBe(1);expect(P.items[0]).toBe(L);expect(P.keys.length).toBe(1);expect(P.keys[0]).toBe(4)});it("should insert the item at the correct location",function(){expect(C.items[0]).toBe(F);C.insert(0,L);expect(C.items[0]).toBe(L)})});describe("replacing items",function(){it("should replace the correct item",function(){C.splice(1,1,[L]);expect(C.getAt(1)).toBe(L)});it("should not change the count",function(){var N=C.getCount();C.splice(1,1,[L]);expect(C.getCount()).toBe(N)});it("should fire the proper events",function(){var N=[];A(C,N,"name");C.splice(1,1,[L]);expect(N).toEqual(["beginupdate",'remove ["second"] at 1 w/keys [2]','add ["fourth"] at 1 w/keys [4]',"endupdate"])})});describe("cloning",function(){it("should copy all items into the new Collection",function(){var N=C.clone();expect(N.getCount()).toBe(3);expect(N.items[0]).toBe(F);expect(N.items[1]).toBe(D);expect(N.items[2]).toBe(E)});it("should keep the getKey fn",function(){var N=function(Q){return Q.id},P=new Ext.util.Collection({keyFn:N});var O=P.clone();expect(O.getKey).toBe(N);P=O=null})});describe("getting items",function(){it("should get an item's key",function(){expect(C.getKey(F)).toBe(1)});describe("first",function(){it("should get the first item",function(){expect(C.first()).toBe(F)});it("should return undefined if the collection is empty",function(){C=new Ext.util.Collection();expect(C.first()).toBeUndefined()})});describe("last",function(){it("should get the last item",function(){expect(C.last()).toBe(E)});it("should return undefined if the collection is empty",function(){C=new Ext.util.Collection();expect(C.last()).toBeUndefined()})});describe("get",function(){it("should get by key",function(){expect(C.get(2)).toBe(D)});it("should return undefined if the key doesn't exist",function(){expect(C.get(100)).toBeUndefined()});it("should get an newly added item",function(){var N={id:"a",name:"fifth item"};C.add(N);expect(C.get("a")).toBe(N)})});describe("indexOf",function(){it("should return the correct indexOf an item",function(){expect(C.indexOf(F)).toBe(0)});it("should return -1 if the item does not exist in the collection",function(){expect(C.indexOf({id:73})).toBe(-1)});it("should handle null",function(){expect(C.indexOf(null)).toBe(-1)})});describe("indexOfKey",function(){it("should return the correct indexOfKey",function(){expect(C.indexOfKey(2)).toBe(1)});it("should return -1 if the key does not exist",function(){expect(C.indexOfKey(42)).toBe(-1)})});describe("get by key",function(){it("should return the correct key",function(){expect(C.getByKey(3)).toBe(E)});it("should return undefined if the key does not exist",function(){expect(C.getByKey(1200)).toBeUndefined()})});describe("getAt",function(){it("should get an item by index",function(){expect(C.getAt(2)).toBe(E)});it("should return undefined if the index is out of bounds",function(){expect(C.getAt(33)).toBeUndefined()})});describe("when getting a range",function(){it("should honor the start and limit params",function(){I();var N=C.getRange(1,3);expect(N.length).toBe(2);expect(N[0]).toBe(D);expect(N[1]).toBe(E)});it("should return all items if no params are given",function(){I();var N=C.getRange();expect(N.length).toBe(9);expect(N[0]).toBe(F);expect(N[1]).toBe(D);expect(N[2]).toBe(E);expect(N[8]).toBe(H)});it("should return all items to the end if only the start param is given",function(){I();var N=C.getRange(1);expect(N.length).toBe(8);expect(N[0]).toBe(D);expect(N[1]).toBe(E);expect(N[7]).toBe(H)});it("should wrap the start value if negative",function(){I();var N=C.getRange(-6,6);expect(N.length).toBe(3);expect(N[0]).toBe(L);expect(N[1]).toBe(M);expect(N[2]).toBe(J)});it("should normalize the end value the collection max",function(){I();var N=C.getRange(6,200);expect(N.length).toBe(3);expect(N[0]).toBe(K)});it("should return empty if start > length",function(){I();var N=C.getRange(10,15);expect(N.length).toBe(0)})})});describe("finding items",function(){describe("findBy",function(){beforeEach(function(){I()});it("should find an item using a passed function",function(){var N=C.findBy(function(O){return O.name==="third"});expect(N).toBe(E)});it("should stop iterating once a match is found",function(){var N=0;C.findBy(function(O){++N;return O.name==="third"});expect(N).toBe(3)});it("should return null if the item is not matched",function(){var N=C.findBy(function(O){return false});expect(N).toBeNull()});it("should pass the item and the key",function(){var N=jasmine.createSpy().andReturn(true);C.findBy(N);expect(N).toHaveBeenCalledWith(F,1)});describe("scope",function(){it("should default the scope to the collection",function(){var N;C.findBy(function(){N=this;return true});expect(N).toBe(C)});it("should use the passed scope",function(){var N;C.findBy(function(){N=this;return true},B);expect(N).toBe(B)})});describe("start",function(){it("should not iterate at all if start > length",function(){var N=0;C.findBy(function(){++N},null,1000);expect(N).toBe(0)});it("should start from the passed index",function(){var N=[];C.findBy(function(P,O){N.push(O)},null,4);expect(N.join(",")).toBe("5,6,7,8,9")});it("should not wrap around",function(){var N=C.findBy(function(O){return O.name==="second"},null,6);expect(N).toBeNull()});it("should find an item after the start",function(){var N=C.findBy(function(O){return O.name==="third"||O.name==="ninth"},null,5);expect(N).toBe(H)})})});describe("findIndexBy",function(){beforeEach(function(){I()});it("should find an item using a passed function",function(){var N=C.findIndexBy(function(O){return O.name==="third"});expect(N).toBe(2)});it("should stop iterating once a match is found",function(){var N=0;C.findIndexBy(function(O){++N;return O.name==="third"});expect(N).toBe(3)});it("should return -1 if the item is not matched",function(){var N=C.findIndexBy(function(O){return false});expect(N).toBe(-1)});it("should pass the item and the key",function(){var N=jasmine.createSpy().andReturn(true);C.findIndexBy(N);expect(N).toHaveBeenCalledWith(F,1)});describe("scope",function(){it("should default the scope to the collection",function(){var N;C.findIndexBy(function(){N=this;return true});expect(N).toBe(C)});it("should use the passed scope",function(){var N;C.findIndexBy(function(){N=this;return true},B);expect(N).toBe(B)})});describe("start",function(){it("should not iterate at all if start > length",function(){var N=0;C.findIndexBy(function(){++N},null,1000);expect(N).toBe(0)});it("should start from the passed index",function(){var N=[];C.findIndexBy(function(P,O){N.push(O)},null,4);expect(N.join(",")).toBe("5,6,7,8,9")});it("should not wrap around",function(){var N=C.findIndexBy(function(O){return O.name==="second"},null,6);expect(N).toBe(-1)});it("should find an item after the start",function(){var N=C.findIndexBy(function(O){return O.name==="third"||O.name==="ninth"},null,5);expect(N).toBe(8)})})});describe("findIndex",function(){beforeEach(function(){I()});it("should find an item's index",function(){var N=C.findIndex("name","third");expect(N).toBe(2)});it("should return -1 if there is no match",function(){var N=C.findIndex("name","foo");expect(N).toBe(-1)});it("should respect the root property",function(){C=new Ext.util.Collection({rootProperty:"root"});C.add({id:1,root:{name:"A"}},{id:2,root:{name:"B"}},{id:3,root:{name:"C"}});var N=C.findIndex("name","B");expect(N).toBe(1)});describe("options",function(){describe("startIndex",function(){it("should match from the startIndex, including the start",function(){var N=C.findIndex("name","s",6,null,false);expect(N).toBe(6)});it("should find items after the startIndex",function(){var N=C.findIndex("name","s",4,null,false);expect(N).toBe(5)});it("should return -1 if the startIndex is larger than the length",function(){var N=C.findIndex("name","s",100);expect(N).toBe(-1)});it("should not 'wrap' over the collection",function(){var N=C.findIndex("name","one",2);expect(N).toBe(-1)})});describe("regex options",function(){describe("startsWith/endsWith",function(){it("should default startsWith & endsWith to true",function(){var N=C.findIndex("name","second");expect(N).toBe(1);N=C.findIndex("name","secon");expect(N).toBe(-1);N=C.findIndex("name","econd");expect(N).toBe(-1)});it("should match the start of the string when passing endsWith: false",function(){var N=C.findIndex("name","second",null,null,false);expect(N).toBe(1);N=C.findIndex("name","secon",null,null,false);expect(N).toBe(1);N=C.findIndex("name","econd",null,null,false);expect(N).toBe(-1)});it("should match the end of the string when passing startsWith: false",function(){var N=C.findIndex("name","second",null,false);expect(N).toBe(1);N=C.findIndex("name","econd",null,false);expect(N).toBe(1);N=C.findIndex("name","secon",null,false);expect(N).toBe(-1)});it("should match anywhere in the string when using startsWith/endsWith false",function(){var N=C.findIndex("name","con",null,false,false);expect(N).toBe(1)})});describe("case",function(){it("should be case insensitive by default",function(){var N=C.findIndex("name","SEVENTH");expect(N).toBe(6)});it("should respect case when passing the ignoreCase flag",function(){var N=C.findIndex("name","SEVENTH",null,null,null,false);expect(N).toBe(-1)})})})})})});describe("contains",function(){it("should contain items that have been added",function(){expect(C.contains(F)).toBe(true)});it("should not contain items that have not been added",function(){expect(C.contains({id:0})).toBe(false)});it("should contain an item by key",function(){expect(C.containsKey(1)).toBe(true)});it("should not contain a non-contained item by key",function(){expect(C.containsKey(100)).toBe(false)})})});describe("createFiltered",function(){var D,E;beforeEach(function(){C=new Ext.util.Collection({keyFn:function(F){return F.name}});C.add([{id:1,name:"Ed",code:"C",modifier:10},{id:2,name:"Abe",code:"A",modifier:100},{id:3,name:"Edward",code:"B",modifier:5}]);D=new Ext.util.Filter({filterFn:function(F){return F.name.charAt(0)==="E"}})});describe("copying",function(){it("should return a new Collection",function(){E=C.createFiltered("name","Ed");expect(E instanceof Ext.util.Collection).toBe(true);expect(E).not.toBe(C)});it("should keep the getKey function when using filter",function(){var F=function(I){return I.id},H=new Ext.util.Collection({keyFn:F});var G=H.createFiltered("name","Ed");expect(G.getKey).toBe(F);H=G=null});it("should keep the getKey function when using filterBy",function(){var F=function(I){return I.id},H=new Ext.util.Collection({keyFn:F});var G=H.createFiltered(function(){return true});expect(G.getKey).toBe(F);H=G=null})});describe("when filtering on a key and value pair",function(){it("should filter correctly",function(){E=C.createFiltered("name","Edward");expect(E.items[0].name).toBe("Edward");expect(E.length).toBe(1)});it("should use anyMatch by default",function(){E=C.createFiltered("name","Ed");expect(E.length).toBe(2)});it("should respect the root property",function(){C=new Ext.util.Collection({rootProperty:"root"});C.add({id:1,root:{name:"A"}},{id:2,root:{name:"B"}});E=C.createFiltered("name","A");expect(E.getCount()).toBe(1)})});describe("when filtering using Filter object",function(){it("should accept a single Filter",function(){E=C.createFiltered(D);expect(E.length).toBe(2)});it("should respect the root property",function(){C=new Ext.util.Collection({rootProperty:"root"});C.add({id:1,root:{name:"A"}},{id:2,root:{name:"B"}});E=C.createFiltered(new Ext.util.Filter({property:"name",value:"A"}));expect(E.getCount()).toBe(1)});describe("array of filters",function(){it("should accept an array of Filters",function(){E=C.createFiltered([D]);expect(E.length).toBe(2)});it("should respect the root property",function(){C=new Ext.util.Collection({rootProperty:"root"});C.add({id:1,root:{name:"A"}},{id:2,root:{name:"B"}});E=C.createFiltered([new Ext.util.Filter({property:"name",value:"A"})]);expect(E.getCount()).toBe(1)})})})});describe("filters collection management",function(){var F={id:0,name:"abba"},G={id:1,name:"aaa"},D={id:2,name:"bad"},E={id:3,name:"ccc"},M={id:4,name:"abc"},N={id:5,name:"bcd"},K={id:6,name:"cde"},L={id:7,name:"xyz"},I={id:8,name:"ddd"},J={id:9,name:"dad"},H={id:10,name:"dood"};beforeEach(function(){C=new Ext.util.Collection();C.add(G,D,E,M,N,K,L,I,J)});describe("single filter",function(){it("should save original items on filter and restore on clear",function(){var O=0,P=C.getFilters();C.on("refresh",function(){++O});expect(C.length).toBe(9);expect(P.length).toBe(0);expect(C.filtered).toBe(false);P.add({property:"name",value:"a"});expect(O).toBe(1);expect(P.length).toBe(1);expect(C.filtered).toBe(true);expect(C.length).toBe(2);expect(C.items[0]).toBe(G);expect(C.items[1]).toBe(M);P.removeAll();expect(O).toBe(2);expect(P.length).toBe(0);expect(C.filtered).toBe(false);expect(C.length).toBe(9);expect(C.items[0]).toBe(G);expect(C.items[1]).toBe(D);expect(C.items[2]).toBe(E);expect(C.items[3]).toBe(M);expect(C.items[4]).toBe(N);expect(C.items[5]).toBe(K);expect(C.items[6]).toBe(L);expect(C.items[7]).toBe(I);expect(C.items[8]).toBe(J)});it("should add items even when filtered",function(){var O=0,P=C.getFilters();C.on("refresh",function(){++O});expect(C.length).toBe(9);expect(P.length).toBe(0);expect(C.filtered).toBe(false);P.add({property:"name",value:"a"});expect(O).toBe(1);expect(P.length).toBe(1);expect(C.filtered).toBe(true);expect(C.length).toBe(2);expect(C.items[0]).toBe(G);expect(C.items[1]).toBe(M);C.add(F,H);expect(C.length).toBe(3);expect(C.items[0]).toBe(G);expect(C.items[1]).toBe(M);expect(C.items[2]).toBe(F);P.removeAll();expect(O).toBe(2);expect(P.length).toBe(0);expect(C.filtered).toBe(false);expect(C.length).toBe(11);expect(C.items[0]).toBe(G);expect(C.items[1]).toBe(D);expect(C.items[2]).toBe(E);expect(C.items[3]).toBe(M);expect(C.items[4]).toBe(N);expect(C.items[5]).toBe(K);expect(C.items[6]).toBe(L);expect(C.items[7]).toBe(I);expect(C.items[8]).toBe(J);expect(C.items[9]).toBe(F);expect(C.items[10]).toBe(H)});it("should sort the filtered items",function(){var O=0,P=C.getFilters();C.on("refresh",function(){++O});expect(C.length).toBe(9);expect(P.length).toBe(0);expect(C.filtered).toBe(false);P.add({property:"name",value:"a"});expect(O).toBe(1);expect(P.length).toBe(1);expect(C.filtered).toBe(true);expect(C.length).toBe(2);expect(C.items[0]).toBe(G);expect(C.items[1]).toBe(M);C.add(F,H);expect(C.length).toBe(3);expect(C.items[0]).toBe(G);expect(C.items[1]).toBe(M);expect(C.items[2]).toBe(F);C.sort("name");expect(C.length).toBe(3);expect(C.items[0]).toBe(G);expect(C.items[1]).toBe(F);expect(C.items[2]).toBe(M);P.removeAll();expect(O).toBe(2);expect(P.length).toBe(0);expect(C.filtered).toBe(false);expect(C.length).toBe(11);expect(C.items[0]).toBe(G);expect(C.items[1]).toBe(F);expect(C.items[2]).toBe(M);expect(C.items[3]).toBe(D);expect(C.items[4]).toBe(N);expect(C.items[5]).toBe(E);expect(C.items[6]).toBe(K);expect(C.items[7]).toBe(J);expect(C.items[8]).toBe(I);expect(C.items[9]).toBe(H);expect(C.items[10]).toBe(L)})});describe("configurable and detachable",function(){it("should allow filters to be configured",function(){var O=0;C=new Ext.util.Collection({filters:{property:"name",value:"a"},listeners:{refresh:function(){++O}}});expect(C.filtered).toBe(true);expect(C.length).toBe(0);var P=C.getFilters();expect(P.length).toBe(1);C.add(G,D,E,M,N,K,L,I,J);expect(O).toBe(0);expect(P.length).toBe(1);expect(C.filtered).toBe(true);expect(C.length).toBe(2);expect(C.items[0]).toBe(G);expect(C.items[1]).toBe(M);C.add(F,H);expect(C.length).toBe(3);expect(C.items[0]).toBe(G);expect(C.items[1]).toBe(M);expect(C.items[2]).toBe(F)});it("should allow filters to be detached",function(){var O=0;C=new Ext.util.Collection({filters:{property:"name",value:"a"},listeners:{refresh:function(){++O}}});expect(C.filtered).toBe(true);expect(C.length).toBe(0);var P=C.getFilters();expect(P.length).toBe(1);C.add(G,D,E,M,N,K,L,I,J);C.add(F,H);C.setFilters(null);expect(O).toBe(1);expect(P.length).toBe(1);expect(C.filtered).toBe(false);expect(C.length).toBe(11);expect(C.items[0]).toBe(G);expect(C.items[1]).toBe(D);expect(C.items[2]).toBe(E);expect(C.items[3]).toBe(M);expect(C.items[4]).toBe(N);expect(C.items[5]).toBe(K);expect(C.items[6]).toBe(L);expect(C.items[7]).toBe(I);expect(C.items[8]).toBe(J);expect(C.items[9]).toBe(F);expect(C.items[10]).toBe(H);C.setFilters(P);expect(O).toBe(2);expect(P.length).toBe(1);expect(C.filtered).toBe(true);expect(C.length).toBe(3);expect(C.items[0]).toBe(G);expect(C.items[1]).toBe(M);expect(C.items[2]).toBe(F)});it("should allow detached filters to be manipulated",function(){var O=0;C=new Ext.util.Collection({filters:{property:"name",value:"a"},listeners:{refresh:function(){++O}}});expect(C.filtered).toBe(true);expect(C.length).toBe(0);var P=C.getFilters();expect(P.length).toBe(1);C.add(G,D,E,M,N,K,L,I,J);C.add(F,H);C.setFilters(null);expect(O).toBe(1);expect(P.length).toBe(1);expect(C.filtered).toBe(false);expect(C.length).toBe(11);expect(C.items[0]).toBe(G);expect(C.items[1]).toBe(D);expect(C.items[2]).toBe(E);expect(C.items[3]).toBe(M);expect(C.items[4]).toBe(N);expect(C.items[5]).toBe(K);expect(C.items[6]).toBe(L);expect(C.items[7]).toBe(I);expect(C.items[8]).toBe(J);expect(C.items[9]).toBe(F);expect(C.items[10]).toBe(H);P.removeAll();expect(O).toBe(1);expect(P.length).toBe(0);expect(C.filtered).toBe(false);expect(C.length).toBe(11);P.add({property:"name",value:"d"});expect(O).toBe(1);expect(P.length).toBe(1);expect(C.filtered).toBe(false);expect(C.length).toBe(11);C.setFilters(P);expect(O).toBe(2);expect(P.length).toBe(1);expect(C.filtered).toBe(true);expect(C.length).toBe(3);expect(C.items[0]).toBe(I);expect(C.items[1]).toBe(J);expect(C.items[2]).toBe(H)})});describe("events",function(){it("should fire the filter event after filtering has taken place",function(){var O;C.on("filter",function(){O=C.getCount()});C.getFilters().add({filterFn:function(P){return Ext.String.startsWith(P.name,"a")}});expect(O).toBe(2)})})});describe("grouping",function(){var F,G,D,E,Q,R,O,P,J,K,M;function L(S,T){C.setGrouper({property:S||"group",direction:T})}function H(){C.setGrouper(null)}function I(S,T){C.getSorters().add({property:S||"sortKey",direction:T})}function N(S,T){C.getFilters().add({property:S||"isFilter",value:Ext.isDefined(T)?T:true})}beforeEach(function(){C=new Ext.util.Collection();C.add((F={id:0,name:"Item0",group:"A",sortKey:3,isFilter:false,age:10}),(G={id:1,name:"Item1",group:"A",sortKey:1,isFilter:true,age:30}),(D={id:2,name:"Item2",group:"A",sortKey:2,isFilter:false,age:20}),(E={id:3,name:"Item3",group:"B",sortKey:2,isFilter:true,age:60}),(Q={id:4,name:"Item4",group:"B",sortKey:3,isFilter:false,age:50}),(R={id:5,name:"Item5",group:"B",sortKey:1,isFilter:true,age:40}),(O={id:6,name:"Item6",group:"C",sortKey:1,isFilter:false,age:80}),(P={id:7,name:"Item7",group:"C",sortKey:2,isFilter:true,age:70}),(J={id:8,name:"Item8",group:"C",sortKey:3,isFilter:false,age:90}),(K={id:9,name:"Item9",group:"D",sortKey:1,isFilter:true,age:100}))});afterEach(function(){M=F=D=E=Q=R=O=P=J=K=null});it("should return an Ext.util.GroupCollection",function(){L();M=C.getGroups();expect(M instanceof Ext.util.GroupCollection).toBe(true)});it("should group by the specified key",function(){L();M=C.getGroups();expect(M.length).toBe(4)});it("should have the appropriate item in each group",function(){L();M=C.getGroups();M.each(function(T){var S=T.getGroupKey();T.each(function(U){expect(U.group).toBe(S)})})});describe("clearing groups",function(){it("should return no groups by default",function(){C=new Ext.util.Collection();expect(C.getGroups()).toBeNull()});it("should return no groups once the grouper has cleared",function(){L();C.getGroups();H();expect(C.getGroups()).toBeNull()})});describe("dynamic manipulation",function(){describe("adding",function(){it("should add to an existing group",function(){L();var T={id:"new",group:"D"},S;C.add(T);S=C.getGroups().get("D");expect(S.length).toBe(2);expect(S.contains(T)).toBe(true)});it("should create a new group",function(){L();expect(C.getGroups().get("E")).toBeUndefined();var T={id:"new",group:"E"},S;C.add(T);S=C.getGroups().get("E");expect(S.length).toBe(1);expect(S.contains(T)).toBe(true)})});describe("removing",function(){it("should remove from an existing group",function(){L();C.remove(F);var S=C.getGroups().get("A");expect(S.length).toBe(2);expect(S.contains(F)).toBe(false)});it("should remove a group",function(){L();C.remove(K);expect(C.getGroups().get("D")).toBeUndefined()})});describe("updating",function(){it("should move the item if the group changes",function(){L();F.group="D";C.itemChanged(F);var T=C.getGroups().get("A"),S=C.getGroups().get("D");expect(S.length).toBe(2);expect(S.contains(F)).toBe(true);expect(T.length).toBe(2);expect(T.contains(F)).toBe(false)})})});describe("sorting",function(){function S(V,W){var U=V.length,T;W=W||C;for(T=0;T<U;++T){expect(W.getAt(T)).toBe(V[T])}}describe("the groups",function(){function T(X){var V=C.getGroups(),W=X.length,U;for(U=0;U<W;++U){expect(V.getAt(U).getGroupKey()).toBe(X[U])}}it("should sort the groups",function(){C=new Ext.util.Collection();C.add(O,Q,D,G,E,K,J,F,R,P);L("group");T("A","B","C","D")});it("should sort the groups according to the group direction",function(){C=new Ext.util.Collection();C.add(O,Q,D,G,E,K,J,F,R,P);L("group","DESC");T("D","C","B","A")});it("should update the group order when the grouper changes",function(){C=new Ext.util.Collection();C.add(O,Q,D,G,E,K,J,F,R,P);L("group");L("group","DESC");T("D","C","B","A")});it("should add new groups in the correct position",function(){C=new Ext.util.Collection();L("group");C.add(E);T(["B"]);C.add(K);T(["B","D"]);C.add(O);T(["B","C","D"]);C.add(D);T(["A","B","C","D"])})});describe("inside the groups",function(){it("should sort the items in the collection by group",function(){C=new Ext.util.Collection();C.add(K,O,E,F);L("group","ASC");S([F,E,O,K])});it("should sort the groups according to the group direction",function(){C=new Ext.util.Collection();C.add(F,E,O,K);L("group","DESC");S([K,O,E,F])});it("should use the natural order inside the groups",function(){C=new Ext.util.Collection();C.add(R,Q,E,D,G,F);L();S([D,G,F,R,Q,E]);var T=C.getGroups();S([D,G,F],T.get("A"));S([R,Q,E],T.get("B"))});it("should insert the record into the correct collection position",function(){C=new Ext.util.Collection();C.add({id:1,name:"Abe"},{id:2,name:"Tommy"});var T={id:3,name:"Nige"};L("name");C.add(T);expect(C.indexOf(T)).toBe(1)})});describe("with sorters",function(){it("should sort the collection by grouper first",function(){I();L();S([G,D,F,R,E,Q,O,P,J,K])});it("should sort the new groups by the sorter",function(){I();L();var T=C.getGroups();S([G,D,F],T.get("A"));S([R,E,Q],T.get("B"));S([O,P,J],T.get("C"));S([K],T.get("D"))});it("should sort existing groups by the sorter",function(){L();I();var T=C.getGroups();S([G,D,F],T.get("A"));S([R,E,Q],T.get("B"));S([O,P,J],T.get("C"));S([K],T.get("D"))});it("should sort by the sorter after the groups have been cleared",function(){I();L();H();S([G,R,O,K,D,E,P,F,Q,J])})})});describe("filters",function(){it("should respect existing filters while grouping",function(){N();L();var T=C.getGroups(),W=T.get("A"),U=T.get("B"),V=T.get("C"),S=T.get("D");expect(W.length).toBe(1);expect(W.first()).toBe(G);expect(U.length).toBe(2);expect(U.first()).toBe(E);expect(U.last()).toBe(R);expect(V.length).toBe(1);expect(V.first()).toBe(P);expect(S.length).toBe(1);expect(S.first()).toBe(K)});it("should filter existing groups",function(){L();N();var T=C.getGroups(),W=T.get("A"),U=T.get("B"),V=T.get("C"),S=T.get("D");expect(W.length).toBe(1);expect(W.first()).toBe(G);expect(U.length).toBe(2);expect(U.first()).toBe(E);expect(U.last()).toBe(R);expect(V.length).toBe(1);expect(V.first()).toBe(P);expect(S.length).toBe(1);expect(S.first()).toBe(K)});it("should update groups when filters are cleared",function(){N();L();C.getFilters().removeAll();var S=C.getGroups();expect(S.get("A").length).toBe(3);expect(S.get("B").length).toBe(3);expect(S.get("C").length).toBe(3);expect(S.get("D").length).toBe(1)});it("should remove groups when required",function(){L();C.getFilters().add({filterFn:function(T){return T.name==="Item0"}});var S=C.getGroups();expect(S.get("A").length).toBe(1);expect(S.get("B")).toBeUndefined();expect(S.get("C")).toBeUndefined();expect(S.get("D")).toBeUndefined()});it("should add groups when required",function(){L();var T=C.getFilters();T.add({filterFn:function(U){return Ext.Array.indexOf(["Item0","Item9"],U.name)>-1}},{filterFn:function(U){return U.name==="Item0"}});var S=C.getGroups();expect(S.get("A").length).toBe(1);expect(S.get("D")).toBeUndefined();T.remove(T.last());S=C.getGroups();expect(S.get("A").length).toBe(1);expect(S.get("D").length).toBe(1)})});describe("aggregation",function(){describe("first",function(){it("should return the first item in each group",function(){L();expect(C.first(true)).toEqual({A:F,B:E,C:O,D:K})});it("should ignore the group paramter if not grouped",function(){expect(C.first(true)).toBe(F)})});describe("last",function(){it("should return the last item in each group",function(){L();expect(C.last(true)).toEqual({A:D,B:R,C:J,D:K})});it("should ignore the group paramter if not grouped",function(){expect(C.last(true)).toBe(K)})});describe("average",function(){it("should get the average for each group",function(){L();expect(C.averageByGroup("age")).toEqual({A:20,B:50,C:80,D:100})})});describe("bounds",function(){it("should return the bounds for each group",function(){L();expect(C.boundsByGroup("age")).toEqual({A:[10,30],B:[40,60],C:[70,90],D:[100,100]})})});describe("count",function(){it("should return the number of items in each group",function(){L();expect(C.countByGroup()).toEqual({A:3,B:3,C:3,D:1})})});describe("extremes",function(){it("should return the extremes for each group",function(){L();expect(C.extremesByGroup("age")).toEqual({A:[F,G],B:[R,E],C:[P,J],D:[K,K]})})});describe("max",function(){it("should return the max for each group",function(){L();expect(C.maxByGroup("age")).toEqual({A:30,B:60,C:90,D:100})})});describe("maxItem",function(){it("should return the maxItem for each group",function(){L();expect(C.maxItemByGroup("age")).toEqual({A:G,B:E,C:J,D:K})})});describe("min",function(){it("should return the min for each group",function(){L();expect(C.minByGroup("age")).toEqual({A:10,B:40,C:70,D:100})})});describe("minItem",function(){it("should return the minItem for each group",function(){L();expect(C.minItemByGroup("age")).toEqual({A:F,B:R,C:P,D:K})})});describe("sum",function(){it("should return the sum for each group",function(){L();expect(C.sumByGroup("age")).toEqual({A:60,B:150,C:240,D:100})})});describe("with a custom aggregator",function(){var S=function(V,Y){var W=0,X=Y.length,U;for(U=0;U<X;++U){W+=(Y[U]*2)}T=this;return W},T;it("should call the custom aggregator",function(){L();expect(C.aggregateByGroup("age",S)).toEqual({A:120,B:300,C:480,D:200})});it("should use the passed scope",function(){L();C.aggregateByGroup("age",S,B);expect(T).toBe(B)})})})});describe("sorting",function(){var E={id:1,name:"Ed",code:"C",modifier:10,firstInitial:"E"},D={id:2,name:"Abe",code:"A",modifier:100,firstInitial:"A"},F={id:3,name:"Edward",code:"B",modifier:5,firstInitial:"E"};function G(H){H.add(E,D,F)}beforeEach(function(){C=new Ext.util.Collection({keyFn:function(H){return H.name}});G(C)});it("should sort ASC by default",function(){C.sort("code");expect(C.items[0].code).toBe("A");expect(C.items[1].code).toBe("B");expect(C.items[2].code).toBe("C")});it("should accept a DESC sort",function(){C.sort("code","DESC");expect(C.items[2].code).toBe("A");expect(C.items[1].code).toBe("B");expect(C.items[0].code).toBe("C")});it("should sort with an Ext.util.Sorter",function(){C.sort(new Ext.util.Sorter({sorterFn:function(I,H){return(I.id*I.modifier)-(H.id*H.modifier)}}));expect(C.items[0].code).toBe("C");expect(C.items[1].code).toBe("B");expect(C.items[2].code).toBe("A")});it("should perform a directional sort with an Ext.util.Sorter",function(){C.sort(new Ext.util.Sorter({direction:"DESC",sorterFn:function(I,H){return(I.id*I.modifier)-(H.id*H.modifier)}}));expect(C.items[2].code).toBe("C");expect(C.items[1].code).toBe("B");expect(C.items[0].code).toBe("A")});it("should respect configured sorters",function(){var H=0;C=new Ext.util.Collection({sorters:"name"});expect(C.sorted).toBe(true);C.on("sort",function(){++H});G(C);expect(H).toBe(0);expect(C.length).toBe(3);expect(C.items[0].name).toBe("Abe");expect(C.items[1].name).toBe("Ed");expect(C.items[2].name).toBe("Edward");expect(C.getByKey(D.id)).toBe(D);expect(C.getByKey(E.id)).toBe(E);expect(C.getByKey(F.id)).toBe(F)});it("should merge new items not resort",function(){var H=[],I=0;C=new Ext.util.Collection({sorters:"name"});expect(C.sorted).toBe(true);C.on({add:function(J,K){H.push(K.items.length+" at "+K.at)},sort:function(){++I}});G(C);expect(H.length).toBe(1);expect(H.join(" / ")).toBe("3 at 0");C.add([{id:10,name:"Nige"},{id:20,name:"Evan"},{id:30,name:"Don"}]);expect(H.length).toBe(3);expect(H.join(" / ")).toBe("3 at 0 / 1 at 1 / 2 at 4");expect(I).toBe(0);expect(C.length).toBe(6);expect(C.items[0].name).toBe("Abe");expect(C.items[1].name).toBe("Don");expect(C.items[2].name).toBe("Ed");expect(C.items[3].name).toBe("Edward");expect(C.items[4].name).toBe("Evan");expect(C.items[5].name).toBe("Nige")});it("should fire a sort event",function(){var H=0;C.on("sort",function(){++H});C.sort("name");expect(H).toBe(1)});it("should sort when sorters is manipulated",function(){expect(C.sorted).toBe(false);expect(C.items[0].name).toBe("Ed");expect(C.items[1].name).toBe("Abe");expect(C.items[2].name).toBe("Edward");C.getSorters().add("name");expect(C.sorted).toBe(true);expect(C.items[0].name).toBe("Abe");expect(C.items[1].name).toBe("Ed");expect(C.items[2].name).toBe("Edward");C.getSorters().remove("name");expect(C.getSorters().length).toBe(0);expect(C.sorted).toBe(false);expect(C.items[0].name).toBe("Abe");expect(C.items[1].name).toBe("Ed");expect(C.items[2].name).toBe("Edward")});it("should not fire the sort event when removing all the sorters",function(){var H=jasmine.createSpy();C.getSorters().add("name");C.on("sort",H);C.getSorters().remove("name");expect(H).not.toHaveBeenCalled()});it("should sort once per sorter manipulation",function(){var H=0,I=C.getSorters();C.on("sort",function(){++H});expect(C.sorted).toBe(false);expect(C.items[0].name).toBe("Ed");expect(C.items[1].name).toBe("Abe");expect(C.items[2].name).toBe("Edward");I.add({property:"firstInitial",direction:"DESC"},"name");expect(H).toBe(1);expect(I.length).toBe(2);expect(C.sorted).toBe(true);expect(C.items[0].name).toBe("Ed");expect(C.items[1].name).toBe("Edward");expect(C.items[2].name).toBe("Abe");I.remove("firstInitial");expect(H).toBe(2);expect(I.length).toBe(1);expect(C.sorted).toBe(true);expect(C.items[0].name).toBe("Abe");expect(C.items[1].name).toBe("Ed");expect(C.items[2].name).toBe("Edward");I.insert(0,{property:"firstInitial",direction:"DESC"});expect(H).toBe(3);expect(I.length).toBe(2);expect(C.sorted).toBe(true);expect(C.items[0].name).toBe("Ed");expect(C.items[1].name).toBe("Edward");expect(C.items[2].name).toBe("Abe")});it("should enforce multiSortLimit",function(){var H=0,I=C.getSorters();C.on("sort",function(){++H});C.setMultiSortLimit(2);C.sort("name",null,"multi");expect(H).toBe(1);expect(I.length).toBe(1);expect(C.sorted).toBe(true);expect(I.items[0].getProperty()).toBe("name");expect(I.items[0].getDirection()).toBe("ASC");expect(C.items[0].name).toBe("Abe");expect(C.items[1].name).toBe("Ed");expect(C.items[2].name).toBe("Edward");C.sort("firstInitial","DESC","multi");expect(H).toBe(2);expect(I.length).toBe(2);expect(C.sorted).toBe(true);expect(I.items[0].getProperty()).toBe("firstInitial");expect(I.items[0].getDirection()).toBe("DESC");expect(I.items[1].getProperty()).toBe("name");expect(I.items[1].getDirection()).toBe("ASC");expect(C.items[0].name).toBe("Ed");expect(C.items[1].name).toBe("Edward");expect(C.items[2].name).toBe("Abe");C.sort("firstInitial",null,"multi");expect(H).toBe(3);expect(I.length).toBe(2);expect(C.sorted).toBe(true);expect(I.items[0].getProperty()).toBe("firstInitial");expect(I.items[0].getDirection()).toBe("ASC");expect(I.items[1].getProperty()).toBe("name");expect(I.items[1].getDirection()).toBe("ASC");expect(C.items[0].name).toBe("Abe");expect(C.items[1].name).toBe("Ed");expect(C.items[2].name).toBe("Edward");C.sort("firstInitial","ASC","multi");expect(H).toBe(4);expect(I.length).toBe(2);expect(C.sorted).toBe(true);expect(I.items[0].getProperty()).toBe("firstInitial");expect(I.items[0].getDirection()).toBe("ASC");expect(I.items[1].getProperty()).toBe("name");expect(I.items[1].getDirection()).toBe("ASC");expect(C.items[0].name).toBe("Abe");expect(C.items[1].name).toBe("Ed");expect(C.items[2].name).toBe("Edward");C.sort("name",null,"multi");expect(H).toBe(5);expect(I.length).toBe(2);expect(C.sorted).toBe(true);expect(I.items[0].getProperty()).toBe("name");expect(I.items[0].getDirection()).toBe("ASC");expect(I.items[1].getProperty()).toBe("firstInitial");expect(I.items[1].getDirection()).toBe("ASC");expect(C.items[0].name).toBe("Abe");expect(C.items[1].name).toBe("Ed");expect(C.items[2].name).toBe("Edward");C.sort("name",null,"multi");expect(H).toBe(6);expect(I.length).toBe(2);expect(C.sorted).toBe(true);expect(I.items[0].getProperty()).toBe("name");expect(I.items[0].getDirection()).toBe("DESC");expect(I.items[1].getProperty()).toBe("firstInitial");expect(I.items[1].getDirection()).toBe("ASC");expect(C.items[0].name).toBe("Edward");expect(C.items[1].name).toBe("Ed");expect(C.items[2].name).toBe("Abe");C.sort("code",null,"multi");expect(H).toBe(7);expect(I.length).toBe(2);expect(C.sorted).toBe(true);expect(I.items[0].getProperty()).toBe("code");expect(I.items[0].getDirection()).toBe("ASC");expect(I.items[1].getProperty()).toBe("name");expect(I.items[1].getDirection()).toBe("DESC");expect(C.items[0].name).toBe("Abe");expect(C.items[1].name).toBe("Edward");expect(C.items[2].name).toBe("Ed")});it("should allow sorter collection removal",function(){var I=jasmine.createSpy(),H=C.getSorters();C.on("sort",I);C.sort("name");expect(C._sorters===H).toBe(true);expect(I.callCount).toBe(1);expect(C.sorted).toBe(true);expect(C.items[0].name).toBe("Abe");expect(C.items[1].name).toBe("Ed");expect(C.items[2].name).toBe("Edward");C.setSorters(null);expect(C._sorters===null).toBe(true);expect(C.sorted).toBe(false);expect(I.callCount).toBe(1);expect(C.items[0].name).toBe("Abe");expect(C.items[1].name).toBe("Ed");expect(C.items[2].name).toBe("Edward");C.sort("code");expect(C._sorters!==H).toBe(true);expect(C._sorters!==null).toBe(true);expect(I.callCount).toBe(2);expect(C.sorted).toBe(true);expect(C.items[0].name).toBe("Abe");expect(C.items[1].name).toBe("Edward");expect(C.items[2].name).toBe("Ed");H.addSort("name");expect(I.callCount).toBe(2);expect(C.sorted).toBe(true);expect(C.items[0].name).toBe("Abe");expect(C.items[1].name).toBe("Edward");expect(C.items[2].name).toBe("Ed");C.setSorters(H);expect(C._sorters===H).toBe(true);expect(C.sorted).toBe(true);expect(I.callCount).toBe(3);expect(C.items[0].name).toBe("Edward");expect(C.items[1].name).toBe("Ed");expect(C.items[2].name).toBe("Abe");C.sort("name");expect(C._sorters===H).toBe(true);expect(I.callCount).toBe(4);expect(C.sorted).toBe(true);expect(C.items[0].name).toBe("Abe");expect(C.items[1].name).toBe("Ed");expect(C.items[2].name).toBe("Edward")});it("should add items in sorted order when the new items need cloning",function(){C.removeAll();C.sort("name","DESC");C.add([D,E,F]);expect(C.getAt(0)).toBe(F);expect(C.getByKey("Edward")).toBe(F);expect(C.getAt(1)).toBe(E);expect(C.getByKey("Ed")).toBe(E);expect(C.getAt(2)).toBe(D);expect(C.getByKey("Abe")).toBe(D)})});describe("rootProperty",function(){var E={id:1,data:{name:"Ed",code:"C",modifier:10,firstInitial:"E"}},D={id:2,data:{name:"Abe",code:"A",modifier:100,firstInitial:"A"}},F={id:3,data:{name:"Edward",code:"B",modifier:5,firstInitial:"E"}};function G(H){H.add(F,D,E)}describe("with extraKeys",function(){it("should properly extract keys",function(){C=new Ext.util.Collection({rootProperty:"data",extraKeys:{byName:{property:"name"}}});G(C);expect(C.length).toBe(3);expect(C.byName.get(D.data.name)).toBe(D);expect(C.byName.get(E.data.name)).toBe(E);expect(C.byName.get(F.data.name)).toBe(F)})});describe("with configured sorters",function(){it("should use the rootProperty",function(){C=new Ext.util.Collection({rootProperty:"data",sorters:"name"});G(C);expect(C.length).toBe(3);expect(C.items[0]).toBe(D);expect(C.items[1]).toBe(E);expect(C.items[2]).toBe(F)})});describe("with dynamic sorters",function(){it("should use the rootProperty",function(){C=new Ext.util.Collection({rootProperty:"data"});G(C);C.sort("name");expect(C.length).toBe(3);expect(C.items[0]).toBe(D);expect(C.items[1]).toBe(E);expect(C.items[2]).toBe(F)})});describe("with configured filters",function(){it("should use the rootProperty",function(){C=new Ext.util.Collection({rootProperty:"data",filters:{property:"name",value:"E"}});G(C);expect(C.length).toBe(2);expect(C.items[0]).toBe(F);expect(C.items[1]).toBe(E)})});describe("with dynamic filters",function(){it("should use the rootProperty",function(){C=new Ext.util.Collection({rootProperty:"data"});G(C);C.setFilters({property:"name",value:"E"});expect(C.length).toBe(2);expect(C.items[0]).toBe(F);expect(C.items[1]).toBe(E)})});describe("with configured filters and sorters",function(){it("should use the rootProperty",function(){C=new Ext.util.Collection({rootProperty:"data",filters:{property:"name",value:"E"},sorters:"name"});G(C);expect(C.length).toBe(2);expect(C.items[0]).toBe(E);expect(C.items[1]).toBe(F)})});describe("with dynamic filters and sorters",function(){it("should use the rootProperty",function(){C=new Ext.util.Collection({rootProperty:"data"});G(C);C.setFilters({property:"name",value:"E"});C.sort("name");expect(C.length).toBe(2);expect(C.items[0]).toBe(E);expect(C.items[1]).toBe(F)})})});describe("extraKeys",function(){var F,G,D,E,M,N,K,L,I,J,H;beforeEach(function(){F={id:0,name:"abba",uid:"123",foo:12};G={id:1,name:"aaa",uid:"234",foo:12};D={id:2,name:"bad",uid:"345",foo:34};E={id:3,name:"ccc",uid:"456",foo:34};M={id:4,name:"abc",uid:"678",foo:24};N={id:5,name:"bcd",uid:"789",foo:67};K={id:6,name:"cde",uid:"890",foo:78};L={id:7,name:"xyz",uid:"012",foo:34};I={id:8,name:"ddd",uid:"246",foo:34};J={id:9,name:"dad",uid:"468",foo:24};H={id:10,name:"dood",uid:"680",foo:24};C=new Ext.util.Collection({extraKeys:{byUid:"uid",byFoo:{property:"foo",unique:false}}});C.add(F,G,D,E,M,N,K,L,I,J,H)});it("should add items and track unique extraKeys",function(){expect(C.length).toBe(11);expect(C.byUid.get(F.uid)).toBe(F);expect(C.byUid.get(G.uid)).toBe(G);expect(C.byUid.get(D.uid)).toBe(D);expect(C.byUid.get(E.uid)).toBe(E);expect(C.byUid.get(M.uid)).toBe(M);expect(C.byUid.get(N.uid)).toBe(N);expect(C.byUid.get(K.uid)).toBe(K);expect(C.byUid.get(L.uid)).toBe(L);expect(C.byUid.get(I.uid)).toBe(I);expect(C.byUid.get(J.uid)).toBe(J);expect(C.byUid.get(H.uid)).toBe(H)});it("should upgade items on itemChanged",function(){expect(C.length).toBe(11);expect(C.byUid.get(F.uid)).toBe(F);expect(C.byUid.get(G.uid)).toBe(G);expect(C.byUid.get(D.uid)).toBe(D);expect(C.byUid.get(E.uid)).toBe(E);expect(C.byUid.get(M.uid)).toBe(M);expect(C.byUid.get(N.uid)).toBe(N);expect(C.byUid.get(K.uid)).toBe(K);expect(C.byUid.get(L.uid)).toBe(L);expect(C.byUid.get(I.uid)).toBe(I);expect(C.byUid.get(J.uid)).toBe(J);expect(C.byUid.get(H.uid)).toBe(H);F.uid+="a";C.itemChanged(F);expect(C.byUid.get(F.uid)).toBe(F)});it("should add items and track non-unique extraKeys",function(){var Q=C.byFoo.get(12),P=C.byFoo.get(24),O=C.byFoo.get(34);expect(Q.length).toBe(2);expect(Q[0]).toBe(F);expect(Q[1]).toBe(G);expect(P.length).toBe(3);expect(P[0]).toBe(M);expect(P[1]).toBe(J);expect(P[2]).toBe(H);expect(O.length).toBe(4);expect(O[0]).toBe(D);expect(O[1]).toBe(E);expect(O[2]).toBe(L);expect(O[3]).toBe(I);expect(C.byFoo.get(N.foo)).toBe(N);expect(C.byFoo.get(K.foo)).toBe(K)});it("should iterate all indices of non-unique extraKeys",function(){var O;O=C.byFoo.indexOf(34);expect(O).toBe(2);O=C.byFoo.indexOf(34,O);expect(O).toBe(3);O=C.byFoo.indexOf(34,O);expect(O).toBe(7);O=C.byFoo.indexOf(34,O);expect(O).toBe(8);O=C.byFoo.indexOf(34,O);expect(O).toBe(-1)});it("should iterate one index of unique extraKeys",function(){var O;O=C.byFoo.indexOf(N.foo);expect(O).toBe(5);O=C.byFoo.indexOf(N.foo,O);expect(O).toBe(-1)});it("should return -1 from indexOf if not found",function(){var O;O=C.byFoo.indexOf(1234);expect(O).toBe(-1)});it("should reflect filter state in unique extraKeys",function(){var P=C.getFilters();expect(C.length).toBe(11);expect(P.length).toBe(0);expect(C.filtered).toBe(false);expect(C.byUid.get(F.uid)).toBe(F);expect(C.byUid.get(G.uid)).toBe(G);expect(C.byUid.get(D.uid)).toBe(D);expect(C.byUid.get(E.uid)).toBe(E);expect(C.byUid.get(M.uid)).toBe(M);expect(C.byUid.get(N.uid)).toBe(N);expect(C.byUid.get(K.uid)).toBe(K);expect(C.byUid.get(L.uid)).toBe(L);expect(C.byUid.get(I.uid)).toBe(I);expect(C.byUid.get(J.uid)).toBe(J);expect(C.byUid.get(H.uid)).toBe(H);function O(Q){return Q.id%2===0}P.add(O);expect(P.length).toBe(1);expect(C.filtered).toBe(true);expect(C.length).toBe(6);expect(C.items[0]).toBe(F);expect(C.items[1]).toBe(D);expect(C.items[2]).toBe(M);expect(C.items[3]).toBe(K);expect(C.items[4]).toBe(I);expect(C.items[5]).toBe(H);expect(C.byUid.get(F.uid)).toBe(F);expect(C.byUid.get(G.uid)).toBe(null);expect(C.byUid.get(D.uid)).toBe(D);expect(C.byUid.get(E.uid)).toBe(null);expect(C.byUid.get(M.uid)).toBe(M);expect(C.byUid.get(N.uid)).toBe(null);expect(C.byUid.get(K.uid)).toBe(K);expect(C.byUid.get(L.uid)).toBe(null);expect(C.byUid.get(I.uid)).toBe(I);expect(C.byUid.get(J.uid)).toBe(null);expect(C.byUid.get(H.uid)).toBe(H);P.remove(O);expect(P.length).toBe(0);expect(C.filtered).toBe(false);expect(C.length).toBe(11);expect(C.byUid.get(F.uid)).toBe(F);expect(C.byUid.get(G.uid)).toBe(G);expect(C.byUid.get(D.uid)).toBe(D);expect(C.byUid.get(E.uid)).toBe(E);expect(C.byUid.get(M.uid)).toBe(M);expect(C.byUid.get(N.uid)).toBe(N);expect(C.byUid.get(K.uid)).toBe(K);expect(C.byUid.get(L.uid)).toBe(L);expect(C.byUid.get(I.uid)).toBe(I);expect(C.byUid.get(J.uid)).toBe(J);expect(C.byUid.get(H.uid)).toBe(H)});it("should reflect filter state in non-unique extraKeys",function(){var P=C.getFilters();expect(C.length).toBe(11);expect(P.length).toBe(0);expect(C.filtered).toBe(false);var S=C.byFoo.get(12),R=C.byFoo.get(24),Q=C.byFoo.get(34);expect(S.length).toBe(2);expect(S[0]).toBe(F);expect(S[1]).toBe(G);expect(R.length).toBe(3);expect(R[0]).toBe(M);expect(R[1]).toBe(J);expect(R[2]).toBe(H);expect(Q.length).toBe(4);expect(Q[0]).toBe(D);expect(Q[1]).toBe(E);expect(Q[2]).toBe(L);expect(Q[3]).toBe(I);expect(C.byFoo.get(N.foo)).toBe(N);expect(C.byFoo.get(K.foo)).toBe(K);function O(T){return T.id%2===0}P.add(O);expect(P.length).toBe(1);expect(C.filtered).toBe(true);expect(C.length).toBe(6);expect(C.items[0]).toBe(F);expect(C.items[1]).toBe(D);expect(C.items[2]).toBe(M);expect(C.items[3]).toBe(K);expect(C.items[4]).toBe(I);expect(C.items[5]).toBe(H);S=C.byFoo.get(12);R=C.byFoo.get(24);Q=C.byFoo.get(34);expect(S).toBe(F);expect(R.length).toBe(2);expect(R[0]).toBe(M);expect(R[1]).toBe(H);expect(Q.length).toBe(2);expect(Q[0]).toBe(D);expect(Q[1]).toBe(I);expect(C.byFoo.get(N.foo)).toBe(null);expect(C.byFoo.get(K.foo)).toBe(K);P.remove(O);expect(P.length).toBe(0);expect(C.filtered).toBe(false);expect(C.length).toBe(11);S=C.byFoo.get(12);R=C.byFoo.get(24);Q=C.byFoo.get(34);expect(S.length).toBe(2);expect(S[0]).toBe(F);expect(S[1]).toBe(G);expect(R.length).toBe(3);expect(R[0]).toBe(M);expect(R[1]).toBe(J);expect(R[2]).toBe(H);expect(Q.length).toBe(4);expect(Q[0]).toBe(D);expect(Q[1]).toBe(E);expect(Q[2]).toBe(L);expect(Q[3]).toBe(I);expect(C.byFoo.get(N.foo)).toBe(N);expect(C.byFoo.get(K.foo)).toBe(K)})});describe("aggregation",function(){describe("simple objects",function(){var G={id:0,amount:40},D={id:1,amount:20},E={id:2,amount:10},F={id:3,amount:30};beforeEach(function(){C=new Ext.util.Collection();C.add(G,D,E,F)});describe("bounds",function(){it("should operate on all items",function(){expect(C.bounds("amount")).toEqual([10,40])});it("should support a start index",function(){expect(C.bounds("amount",2)).toEqual([10,30])});it("should support a range",function(){expect(C.bounds("amount",0,2)).toEqual([20,40])})});describe("count",function(){it("should return the count",function(){expect(C.count()).toBe(4)})});describe("extremes",function(){it("should operate on all items",function(){var H=C.extremes("amount");expect(H[0]).toBe(E);expect(H[1]).toBe(G)});it("should support a start index",function(){var H=C.extremes("amount",2);expect(H[0]).toBe(E);expect(H[1]).toBe(F)});it("should support a range",function(){var H=C.extremes("amount",0,2);expect(H[0]).toBe(D);expect(H[1]).toBe(G)})});describe("max",function(){it("should operate on all items",function(){expect(C.max("amount")).toBe(40)});it("should support a start index",function(){expect(C.max("amount",2)).toBe(30)});it("should support a range",function(){expect(C.max("amount",1,3)).toBe(20)})});describe("maxItem",function(){it("should operate on all items",function(){expect(C.maxItem("amount")).toBe(G)});it("should support a start index",function(){expect(C.maxItem("amount",2)).toBe(F)});it("should support a range",function(){expect(C.maxItem("amount",1,3)).toBe(D)})});describe("min",function(){it("should operate on all items",function(){expect(C.min("amount")).toBe(10)});it("should support a start index",function(){expect(C.min("amount",2)).toBe(10)});it("should support a range",function(){expect(C.min("amount",0,2)).toBe(20)})});describe("minItem",function(){it("should operate on all items",function(){expect(C.minItem("amount")).toBe(E)});it("should support a start index",function(){expect(C.minItem("amount",2)).toBe(E)});it("should support a range",function(){expect(C.minItem("amount",0,2)).toBe(D)})});describe("sum",function(){it("should operate on all items",function(){expect(C.sum("amount")).toBe(100)});it("should support a start index",function(){expect(C.sum("amount",2)).toBe(40)});it("should support a range",function(){expect(C.sum("amount",1,3)).toBe(30)})})});describe("complex objects",function(){var G={id:0,data:{amount:40}},D={id:1,data:{amount:20}},E={id:2,data:{amount:10}},F={id:3,data:{amount:30}};beforeEach(function(){C=new Ext.util.Collection({rootProperty:"data"});C.add(G,D,E,F)});describe("bounds",function(){it("should operate on all items",function(){expect(C.bounds("amount")).toEqual([10,40])});it("should support a start index",function(){expect(C.bounds("amount",2)).toEqual([10,30])});it("should support a range",function(){expect(C.bounds("amount",0,2)).toEqual([20,40])})});describe("extremes",function(){it("should operate on all items",function(){var H=C.extremes("amount");expect(H[0]).toBe(E);expect(H[1]).toBe(G)});it("should support a start index",function(){var H=C.extremes("amount",2);expect(H[0]).toBe(E);expect(H[1]).toBe(F)});it("should support a range",function(){var H=C.extremes("amount",0,2);expect(H[0]).toBe(D);expect(H[1]).toBe(G)})});describe("max",function(){it("should operate on all items",function(){expect(C.max("amount")).toBe(40)});it("should support a start index",function(){expect(C.max("amount",2)).toBe(30)});it("should support a range",function(){expect(C.max("amount",1,3)).toBe(20)})});describe("maxItem",function(){it("should operate on all items",function(){expect(C.maxItem("amount")).toBe(G)});it("should support a start index",function(){expect(C.maxItem("amount",2)).toBe(F)});it("should support a range",function(){expect(C.maxItem("amount",1,3)).toBe(D)})});describe("min",function(){it("should operate on all items",function(){expect(C.min("amount")).toBe(10)});it("should support a start index",function(){expect(C.min("amount",2)).toBe(10)});it("should support a range",function(){expect(C.min("amount",0,2)).toBe(20)})});describe("minItem",function(){it("should operate on all items",function(){expect(C.minItem("amount")).toBe(E)});it("should support a start index",function(){expect(C.minItem("amount",2)).toBe(E)});it("should support a range",function(){expect(C.minItem("amount",0,2)).toBe(D)})});describe("sum",function(){it("should operate on all items",function(){expect(C.sum("amount")).toBe(100)});it("should support a start index",function(){expect(C.sum("amount",2)).toBe(40)});it("should support a range",function(){expect(C.sum("amount",1,3)).toBe(30)})})})});describe("itemChanged",function(){var K={add:0,beforeitemchange:0,beginupdate:0,endupdate:0,itemchange:0,refresh:0,remove:0,sort:0,updatekey:0};var D,I,J;var F,H,G,L,M;function E(){var N={};D=[];I=[];Ext.Object.each(K,function(O){K[O]=0;N[O]=function(){++K[O];J=Ext.Array.slice(arguments,0);J[1]=Ext.apply({},J[1]);D.push(J);I.push(O)}});return N}beforeEach(function(){F={id:1,name:"Don",foo:10};H={id:2,name:"Evan",foo:100};G={id:3,name:"Nige",foo:50};L={id:4,name:"Phil",foo:30};M={id:5,name:"Kevin",foo:30}});describe("unsorted and unfiltered",function(){beforeEach(function(){C=new Ext.util.Collection({listeners:E()});C.add(F,H,G);E()});it("should not fire add, remove or updatekey when not changed",function(){F.name="Donald";C.itemChanged(F);expect(I.join(",")).toBe("beginupdate,beforeitemchange,itemchange,endupdate");var N=D[1][1],O=D[2][1];expect(N).toEqual(O);expect(N.item).toBe(F);expect(N.filterChanged).toBe(false);expect(N.keyChanged).toBe(false);expect(N.indexChanged).toBe(false);expect(N.modified).toBe(undefined);expect(N.filtered).toBe(false);expect(N.newIndex).toBe(undefined);expect(N.oldIndex).toBe(undefined);expect(N.oldKey).toBe(undefined);expect(N.wasFiltered).toBe(false)});it("should fire updatekey and not fire add or remove",function(){var P=F.id;F.name="Donald";F.id=10;C.itemChanged(F,null,P);expect(I.join(",")).toBe("beginupdate,beforeitemchange,updatekey,itemchange,endupdate");var N=D[1][1],O=D[3][1];expect(N).toEqual(O);expect(N.item).toBe(F);expect(N.filterChanged).toBe(false);expect(N.keyChanged).toBe(true);expect(N.indexChanged).toBe(false);expect(N.modified).toBe(undefined);expect(N.filtered).toBe(false);expect(N.newIndex).toBe(undefined);expect(N.oldIndex).toBe(undefined);expect(N.oldKey).toBe(P);expect(N.wasFiltered).toBe(false)})});describe("sorted and unfiltered",function(){beforeEach(function(){C=new Ext.util.Collection({listeners:E(),sorters:"name"});C.add(F,G,H,L,M);E()});it("should fire add and remove not updatekey",function(){F.name="Wayne";C.itemChanged(F);expect(I.join(",")).toBe("beginupdate,beforeitemchange,remove,add,itemchange,endupdate");var N=D[1][1];expect(N.item).toBe(F);expect(N.filterChanged).toBe(false);expect(N.keyChanged).toBe(false);expect(N.indexChanged).toBe(true);expect(N.modified).toBe(undefined);expect(N.filtered).toBe(false);expect(N.newIndex).toBe(5);expect(N.oldIndex).toBe(0);expect(N.oldKey).toBe(undefined);expect(N.wasFiltered).toBe(false);expect(C.items).toEqual([H,M,G,L,F])});it("should fire updatekey and not fire add or remove",function(){var P=F.id;F.name="Donald";F.id=10;C.itemChanged(F,null,P);expect(I.join(",")).toBe("beginupdate,beforeitemchange,updatekey,itemchange,endupdate");var N=D[1][1],O=D[3][1];expect(N).toEqual(O);expect(N.item).toBe(F);expect(N.filterChanged).toBe(false);expect(N.keyChanged).toBe(true);expect(N.indexChanged).toBe(false);expect(N.modified).toBe(undefined);expect(N.filtered).toBe(false);expect(N.newIndex).toBe(undefined);expect(N.oldIndex).toBe(undefined);expect(N.oldKey).toBe(P);expect(N.wasFiltered).toBe(false)});it("should order correctly after a sort field change moving to last position",function(){var P;F.name="Zaphod";C.on({add:function(R,Q){P=Q.at},single:true});C.itemChanged(F);expect(I.join(",")).toBe("beginupdate,beforeitemchange,remove,add,itemchange,endupdate");var N=D[1][1],O=D[4][1];expect(N.item).toBe(F);expect(N.filterChanged).toBe(false);expect(N.keyChanged).toBe(false);expect(N.indexChanged).toBe(true);expect(N.modified).toBe(undefined);expect(N.filtered).toBe(false);expect(N.newIndex).toBe(5);expect(P).toBe(4);expect(N.oldIndex).toBe(0);expect(N.oldKey).toBe(undefined);expect(N.wasFiltered).toBe(false);expect(O.newIndex).toBe(4);expect(C.items).toEqual([H,M,G,L,F])});it("should order correctly after a sort field change moving to penultimate position",function(){var P;F.name="Owen";C.on({add:function(R,Q){P=Q.at},single:true});C.itemChanged(F);expect(I.join(",")).toBe("beginupdate,beforeitemchange,remove,add,itemchange,endupdate");var N=D[1][1],O=D[4][1];expect(N.item).toBe(F);expect(N.filterChanged).toBe(false);expect(N.keyChanged).toBe(false);expect(N.indexChanged).toBe(true);expect(N.modified).toBe(undefined);expect(N.filtered).toBe(false);expect(N.newIndex).toBe(4);expect(P).toBe(3);expect(N.oldIndex).toBe(0);expect(N.oldKey).toBe(undefined);expect(N.wasFiltered).toBe(false);expect(O.newIndex).toBe(3);expect(C.items).toEqual([H,M,G,F,L])});it("should order correctly after a sort field change moving to first position",function(){var P;H.name="Aaron";C.on({add:function(R,Q){P=Q.at},single:true});C.itemChanged(H);expect(I.join(",")).toBe("beginupdate,beforeitemchange,remove,add,itemchange,endupdate");var N=D[1][1],O=D[4][1];expect(N.item).toBe(H);expect(N.filterChanged).toBe(false);expect(N.keyChanged).toBe(false);expect(N.indexChanged).toBe(true);expect(N.modified).toBe(undefined);expect(N.filtered).toBe(false);expect(N.newIndex).toBe(0);expect(P).toBe(0);expect(N.oldIndex).toBe(1);expect(N.oldKey).toBe(undefined);expect(N.wasFiltered).toBe(false);expect(O.oldIndex).toBe(2);expect(C.items).toEqual([H,F,M,G,L])});it("should order correctly after a sort field change moving to second position",function(){var P;L.name="Edgar";C.on({add:function(R,Q){P=Q.at},single:true});C.itemChanged(L);expect(I.join(",")).toBe("beginupdate,beforeitemchange,remove,add,itemchange,endupdate");var N=D[1][1],O=D[4][1];expect(N.item).toBe(L);expect(N.filterChanged).toBe(false);expect(N.keyChanged).toBe(false);expect(N.indexChanged).toBe(true);expect(N.modified).toBe(undefined);expect(N.filtered).toBe(false);expect(N.newIndex).toBe(1);expect(P).toBe(1);expect(N.oldIndex).toBe(4);expect(N.oldKey).toBe(undefined);expect(N.wasFiltered).toBe(false);expect(O.oldIndex).toBe(5);expect(C.items).toEqual([F,L,H,M,G])})});describe("unsorted and filtered",function(){beforeEach(function(){C=new Ext.util.Collection({listeners:E(),filters:{property:"foo",value:50,operator:"<="}});C.add(F,G,H);E()});it("should remove item once filter applies",function(){expect(C.length).toBe(2);expect(C.items[0]).toBe(F);expect(C.items[1]).toBe(G);F.foo=75;C.itemChanged(F);expect(C.length).toBe(1);expect(C.items[0]).toBe(G);expect(I.join(",")).toBe("beginupdate,beforeitemchange,remove,itemchange,endupdate");var N=D[1][1],O=D[3][1];expect(N).toEqual(O);expect(N.item).toBe(F);expect(N.filterChanged).toBe(true);expect(N.keyChanged).toBe(false);expect(N.indexChanged).toBe(false);expect(N.modified).toBe(undefined);expect(N.filtered).toBe(true);expect(N.newIndex).toBe(-1);expect(N.oldIndex).toBe(0);expect(N.oldKey).toBe(undefined);expect(N.wasFiltered).toBe(false)});it("should restore item once filter no longer applies",function(){H.foo=5;C.itemChanged(H);expect(C.length).toBe(3);expect(C.items[0]).toBe(F);expect(C.items[1]).toBe(G);expect(C.items[2]).toBe(H);expect(I.join(",")).toBe("beginupdate,beforeitemchange,add,itemchange,endupdate");var N=D[1][1],O=D[3][1];expect(N).toEqual(O);expect(N.item).toBe(H);expect(N.filterChanged).toBe(true);expect(N.keyChanged).toBe(false);expect(N.indexChanged).toBe(false);expect(N.modified).toBe(undefined);expect(N.filtered).toBe(false);expect(N.newIndex).toBe(2);expect(N.oldIndex).toBe(-1);expect(N.oldKey).toBe(undefined);expect(N.wasFiltered).toBe(true)})});describe("sorted and filtered",function(){beforeEach(function(){C=new Ext.util.Collection({listeners:E(),filters:{property:"foo",value:50,operator:"<="},sorters:{property:"name",direction:"DESC"}});C.add(F,G,H);E()});it("should remove item once filter applies",function(){expect(C.length).toBe(2);expect(C.items[0]).toBe(G);expect(C.items[1]).toBe(F);F.foo=75;C.itemChanged(F);expect(C.length).toBe(1);expect(C.items[0]).toBe(G);expect(I.join(",")).toBe("beginupdate,beforeitemchange,remove,itemchange,endupdate");var N=D[1][1],O=D[3][1];expect(N).toEqual(O);expect(N.item).toBe(F);expect(N.filterChanged).toBe(true);expect(N.keyChanged).toBe(false);expect(N.indexChanged).toBe(false);expect(N.modified).toBe(undefined);expect(N.filtered).toBe(true);expect(N.newIndex).toBe(-1);expect(N.oldIndex).toBe(1);expect(N.oldKey).toBe(undefined);expect(N.wasFiltered).toBe(false)});it("should restore item once filter no longer applies",function(){H.foo=5;C.itemChanged(H);expect(C.length).toBe(3);expect(C.items[0]).toBe(G);expect(C.items[1]).toBe(H);expect(C.items[2]).toBe(F);expect(I.join(",")).toBe("beginupdate,beforeitemchange,add,itemchange,endupdate");var N=D[1][1],O=D[3][1];expect(N).toEqual(O);expect(N.item).toBe(H);expect(N.filterChanged).toBe(true);expect(N.keyChanged).toBe(false);expect(N.indexChanged).toBe(false);expect(N.modified).toBe(undefined);expect(N.filtered).toBe(false);expect(N.newIndex).toBe(2);expect(N.oldIndex).toBe(-1);expect(N.oldKey).toBe(undefined);expect(N.wasFiltered).toBe(true)});it("should restore item and position once filter no longer applies",function(){H.foo=5;H.name="ZEvan";C.itemChanged(H);expect(C.length).toBe(3);expect(C.items[0]).toBe(H);expect(C.items[1]).toBe(G);expect(C.items[2]).toBe(F);expect(I.join(",")).toBe("beginupdate,beforeitemchange,add,itemchange,endupdate");var N=D[1][1],O=D[3][1];expect(N).toEqual(O);expect(N.item).toBe(H);expect(N.filterChanged).toBe(true);expect(N.keyChanged).toBe(false);expect(N.indexChanged).toBe(false);expect(N.modified).toBe(undefined);expect(N.filtered).toBe(false);expect(N.newIndex).toBe(2);expect(N.oldIndex).toBe(-1);expect(N.oldKey).toBe(undefined);expect(N.wasFiltered).toBe(true)})});describe("with a source",function(){it("should pass along the onCollectionItemChanged to the child",function(){var N=new Ext.util.Collection(),O=jasmine.createSpy(),P;N.add(F);C=new Ext.util.Collection({source:N});C.onCollectionItemChange=O;N.itemChanged(F,["name"]);P=O.mostRecentCall.args;expect(P[0]).toBe(N);expect(P[1].modified).toEqual(["name"])})})});describe("collecting",function(){describe("simple objects",function(){beforeEach(function(){C=new Ext.util.Collection();C.add([{id:1,amount:10,name:"Ed"},{id:2,amount:20,name:"Abe"},{id:3,amount:20,name:"Ed"}])});it("should collect the unique properties from each item",function(){var D=C.collect("name");expect(D.length).toBe(2)})});describe("complex objects",function(){beforeEach(function(){C=new Ext.util.Collection();C.add([{id:1,data:{amount:10,name:"Ed"}},{id:2,data:{amount:20,name:"Abe"}},{id:3,data:{amount:20,name:"Ed"}}])});it("should collect the unique properties from each item",function(){var D=C.collect("name","data");expect(D.length).toBe(2)})})});describe("adding a Collection to a Collection",function(){it("Should add a Collection as a single new item",function(){var E=new Ext.util.Collection({keyFn:function(F){return F}}),D=new Ext.util.Collection();E.add("b","c");D.add(E);expect(D.get(E.getId()).indexOf("c")).toBe(1)})});describe("adding duplicate items",function(){it("should overwrite duplicates",function(){var E=new Ext.util.Collection();var D=[];A(E,D,"text");E.add({id:1,text:"foo"},{id:2,text:"bar"},{id:1,text:"bletch"},{id:2,text:"zarg"});expect(D).toEqual(["beginupdate",'add ["bletch","zarg"] at 0 w/keys [1,2]',"endupdate"]);expect(E.getCount()).toBe(2);expect(E.getAt(0).text).toBe("bletch");expect(E.getAt(1).text).toBe("zarg")})});describe("item decoder",function(){it("Should decode new items",function(){var F=Ext.define(null,{isItem:true,config:{id:null},constructor:function(H){this.initConfig(H)}});var D=0;var E=0;var G=new Ext.util.Collection({decoder:function(H){++D;if(!H.isItem){++E;H=new F(H)}return H}});G.add({id:42},new F({id:"abc"}));expect(D).toBe(2);expect(E).toBe(1);expect(G.items[0].isItem).toBe(true);expect(G.items[0].getId()).toBe(42);expect(G.items[1].isItem).toBe(true);expect(G.items[1].getId()).toBe("abc")})})});