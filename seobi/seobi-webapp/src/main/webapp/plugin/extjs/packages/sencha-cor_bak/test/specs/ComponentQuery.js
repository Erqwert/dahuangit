describe("Ext.ComponentQuery",function(){var G,O,J,E,L,N,R,I,Q,H,K,S,D,M,A,B,C,F=function(U,V){if(U.items){for(var T=0;T<U.items.length;T++){F(U.items[T],U)}}Ext.apply(U,{getItemId:function(){return this.itemId!==undefined?this.itemId:this.id},getId:function(){return this.id},getRefItems:function(X){var a=this.items||[],Z=a.length,W=0,Y;if(X){for(;W<Z;W++){Y=a[W];if(Y.getRefItems){a=a.concat(Y.getRefItems(true))}}}return a},getRefOwner:function(){return this.ownerCt},hasCls:function(W){return this.cls==W},isHidden:function(){return this.hidden},isXType:function(W){return J.contains(this.type.split("/"),W)},ownerCt:V});O.register(U)};function P(){var Y=Array.prototype.slice.apply(arguments),U=Y.shift(),V=Y.length,T,W,X;expect(U.length).toBe(V);for(T=0,V=Y.length;T<V;T++){W=Y[T];X=U[T];expect(X.id).toBe(W.id)}}beforeEach(function(){G=Ext.ComponentQuery;O=Ext.ComponentManager;J=Ext.Array;L={id:"root",cls:"root-cls",type:"A",items:[N={$className:"Foo",id:"child1",cls:"child1-cls",type:"B/G/Z",foo:"bar,baz"},R={$className:"Bar.Baz.Qux",id:"child2",cls:"child2-cls",type:"B/G/Z",bar:"foo,bar,baz"},I={$className:"Foo",id:"child3",cls:"child3-cls",type:"B/C/D",layout:"card",items:[Q={id:"child4",cls:"child4-cls",type:"B/C/E",layout:"hbox",items:[H={id:"child5",cls:"child5-cls",type:"B/C/F",items:[S={id:"child7",cls:"child7-cls",type:"B/G/H"},D={id:"child8",cls:"child8-cls",type:"B/G/I"},M={id:"child9",cls:"child9-cls",type:"B/G/J"}]},K={id:"child6",cls:"child6-cls",type:"B/G/Z",hidden:true},A={id:"child10",cls:"child10-cls my-foo-cls",type:"B"},B={id:"child.11",cls:"child11-cls my-foo-cls-test",type:"B"},C={id:"child.12",itemId:"bobby.brown.goes.down",type:"E.2-E.4",foo:"[foo(bar)!baz#qux\\fred*]",sq:"'single' 'quotes'",dq:'"double" "quotes"'}]}]}]};F(L)});afterEach(function(){O.all={}});describe("parser",function(){it("should blow up if the intra-selector comma is escaped",function(){expect(function(){G.query("#child3\\,F",L)}).toThrow('Invalid ComponentQuery selector: ",F"')});it("should blow up if a selector ends with unescaped comma",function(){expect(function(){G.query("#child3,",L)}).toThrow('Invalid ComponentQuery selector: ""')});it("should blow up if a selector ends with an escaped comma",function(){expect(function(){G.query("#child3\\,",L)}).toThrow('Invalid ComponentQuery selector: ","')});describe("missing quotes",function(){var T;beforeEach(function(){spyOn(Ext.log,"warn").andCallFake(function(U){T=U});T=null});it("should warn on missing opening double quote",function(){G.query('[foo=bar"]');expect(T).toMatch(/^ComponentQuery selector.*?unescaped \("\).*?end/)});it("should warn on missing closing double quote",function(){G.query('[foo="bar]');expect(T).toMatch(/^ComponentQuery selector.*?unescaped \("\).*?beginning/)});it("should warn on missing opening single quote",function(){G.query("[foo=bar']");expect(T).toMatch(/^ComponentQuery selector.*?unescaped \('\).*end/)});it("should warn on missing closing single quote",function(){G.query("[foo='bar]");expect(T).toMatch(/^ComponentQuery selector.*?unescaped \('\).*beginning/)})})});describe("Query object",function(){describe("is",function(){it("should return true if the selector is empty",function(){var T=G.parse("");expect(T.is(L)).toBe(true)})})});describe("is",function(){var T;beforeEach(function(){T=Ext.getCmp("root")});afterEach(function(){T=null});it("should return true if there is no selector",function(){expect(G.is(L)).toBe(true)});it("should return true if component matches the selector",function(){expect(G.is(L,"[type=A]")).toBe(true)});it("should return true if component matches any selector",function(){expect(G.is(L,"button, #foo, #root, [type=A]")).toBe(true)});it("should return false if the component doesn't match the selector",function(){expect(G.is(L,"#foo")).toBe(false)});it("should work with the :not pseudo",function(){var U=new Ext.Component({foo:1});expect(U.is("[foo]:not([bar])")).toBe(true)});it("should be able to run on destroyed components",function(){var U=new Ext.Component({foo:1});U.destroy();expect(U.is("[foo]:not([bar])")).toBe(true)});describe("hierarchy selectors",function(){it("should match a direct child",function(){expect(G.is(K,"#child4 > #child6")).toBe(true)});it("should return false if it's not a direct child",function(){expect(G.is(K,"#child3 > #child6")).toBe(false)});it("should match deep children",function(){expect(G.is(K,"#child3 #child6")).toBe(true)});it("should match an upward selector",function(){expect(G.is(I,"#child6 ^ #child3")).toBe(true)})})});describe("simple query by xtype",function(){it("should select all six items of type G",function(){E=G.query("G",L);expect(E.length).toEqual(6);expect(E[2].id).toEqual(K.id)});it("should allow escaped dots in xtype selector",function(){E=G.query("E\\.2-E\\.4",L);expect(E.length).toBe(1);expect(E[0].id).toBe(C.id)})});describe("simple query by xtype prefixed with dot",function(){it("should select all six items of type G",function(){E=G.query(".G",L);expect(E.length).toEqual(6);expect(E[2].id).toEqual(K.id)});it("should allow escaped dots in xtype selector",function(){E=G.query(".E\\.2-E\\.4",L);expect(E.length).toBe(1);expect(E[0].id).toBe(C.id)})});describe("attributes starting with $",function(){it("should match $className variable",function(){E=G.query("[$className=Foo]");expect(E.length).toBe(2);expect(E[0].id).toBe("child1");expect(E[1].id).toBe("child3")});it("should allow dots in attribute values",function(){E=G.query("[$className=Bar.Baz.Qux]",L);P(E,R)})});describe("query by id",function(){it("should select the second child",function(){E=G.query("G#child2",L);expect(E.length).toEqual(1);expect(E[0].id).toEqual(R.id)});it("should select the fifth child",function(){E=G.query("#child5",L);expect(E.length).toEqual(1);expect(E[0].id).toEqual(H.id)});it("should allow escaped dots in query-by-id selectors",function(){E=G.query("#child\\.11",L);P(E,B)});it("should allow multiple escaped commas in #itemId selectors",function(){E=G.query("#bobby\\.brown\\.goes\\.down",L);P(E,C)})});describe("query by property",function(){it("should select the second child",function(){E=G.query("G[cls=child2-cls]",L);expect(E.length).toEqual(1);expect(E[0].id).toEqual(R.id)});it("should select the sixth child",function(){E=G.query("[hidden]",L);expect(E.length).toEqual(1);expect(E[0].id).toEqual(K.id)});describe("property value quotes",function(){it("should allow single quoted value",function(){E=G.query("[id='child.12']",L);P(E,C)});it("should allow double quoted value",function(){E=G.query('[id="child.12"]',L);P(E,C)});it("should allow double quotes in single quoted value",function(){E=G.query('[dq=\'"double" "quotes"\']',L);P(E,C)});it("should allow single quotes in double quoted value",function(){E=G.query("[sq=\"'single' 'quotes'\"]",L);P(E,C)})});describe("matchers",function(){it("should select the tenth child",function(){E=G.query("[cls~=my-foo-cls]",L);expect(E.length).toEqual(1);expect(E[0].id).toEqual(A.id)});it("should select items where id starts with child1",function(){E=G.query("[id^=child1]",L);P(E,N,A)});it("should select items where cls ends with 9-cls",function(){E=G.query("[cls$=9-cls]",L);expect(E.length).toBe(1);expect(E[0].cls).toBe("child9-cls")});it("should select items with commas in properties",function(){E=G.query("[foo=bar\\,baz]");expect(E.length).toEqual(1);expect(E[0].id).toEqual(N.id)});it("should allow multiple escaped commas",function(){E=G.query("[bar=foo\\,bar\\,baz]",L);P(E,R)});it("should allow escaped metacharacters",function(){E=G.query("[foo=\\[foo\\(bar\\)\\!baz\\#qux\\\\fred\\*\\]]",L);P(E,C)});describe("regexen",function(){it("should match everything with an empty regex",function(){E=G.query("[cls/=]");expect(E.length).toBe(12)});describe("simple regexen",function(){it("should match regexen with text as pattern",function(){E=G.query("[cls/=my-foo]");P(E,A,B)});it("should match regexen with simple alternation",function(){E=G.query("[cls/=child3-cls|child4-cls|child5-cls]");P(E,H,Q,I)})});describe("complex regexen",function(){it("should match regexen with pattern quantifiers",function(){E=G.query('[cls/="child.{2}-cls"]');P(E,A,B)});it("should match regexen with grouping and alternating",function(){E=G.query('[cls/="child(?:7|8)-cls"]');P(E,S,D)});it("should match regexen with character classes",function(){E=G.query('[cls/="child\\[5-7\\]-cls"]');P(E,S,H,K)})})})})});describe("query using mode ^",function(){it("should select the fourth child",function(){E=G.query("G[cls=child8-cls]^#child4",L);expect(E.length).toEqual(1);expect(E[0].id).toEqual(Q.id)})});describe("query using mode ^ and >",function(){it("should select the sixth child",function(){E=G.query("G[cls=child8-cls]^#child4>G",L);expect(E.length).toEqual(1);expect(E[0].id).toEqual(K.id)})});describe("query using multiple selectors",function(){it("should select the third and fifth child",function(){E=G.query("#child3,F",L);expect(E.length).toEqual(2);expect(E[0].id).toEqual(I.id);expect(E[1].id).toEqual(H.id)})});describe("query using member function",function(){it("should select the sixth child that is hidden",function(){E=G.query("{isHidden()}",L);expect(E.length).toEqual(1);expect(E[0].id).toEqual(K.id)})});describe("query using pseudo-class",function(){beforeEach(function(){G.pseudos.cardLayout=function(W){var U=[],X,T=0,V=W.length;for(;T<V;T++){if((X=W[T]).layout==="card"){U.push(X)}}return U}});it("should select the third child with layout == 'card'",function(){E=G.query("C:cardLayout",L);delete G.pseudos.cardLayout;expect(E.length).toEqual(1);expect(E[0].id).toEqual(I.id)});it("should not select the sixth child which is filtered by :not()",function(){E=G.query(":not([hidden])",L);var T=L.getRefItems(true),V=function(Y){return Y.id},U=J.map(T,V),W=J.map(E,V),X=J.difference(U,W);expect(E.length).toEqual(T.length-1);expect(X.length).toEqual(1);expect(X[0]).toEqual(K.id)});it("should accept back-to-back pseudo-class selectors with cumulative results",function(){E=G.query(":not(G):not(F)",L);expect(E.length).toEqual(5);expect(E[0].id).toEqual(I.id);expect(E[1].id).toEqual(Q.id);expect(E[2].id).toEqual(A.id);expect(E[3].id).toEqual(B.id);expect(E[4].id).toEqual(C.id)});it("should accept member expression selectors",function(){E=G.query(":not({isHidden()})",L);var T=L.getRefItems(true),V=function(Y){return Y.id},U=J.map(T,V),W=J.map(E,V),X=J.difference(U,W);expect(E.length).toEqual(T.length-1);expect(X.length).toEqual(1);expect(X[0]).toEqual(K.id)});describe("first/last",function(){var T;beforeEach(function(){T=[new Ext.Component({action:"type1",id:"id1"}),new Ext.container.Container({action:"type1",id:"id2"}),new Ext.container.Container({action:"type2",id:"id3"}),new Ext.Component({action:"type2",id:"id4"}),new Ext.container.Container({action:"type2",id:"id5"})]});afterEach(function(){Ext.Array.forEach(T,function(U){U.destroy()});T=null});describe("first",function(){it("should return an empty array if no items match",function(){var U=G.query("button:first",T);expect(U).toEqual([])});it("should return the first matching component by type",function(){var U=G.query("container:first",T);expect(U).toEqual([T[1]])});it("should return the last matching component by attribute",function(){var U=G.query("[action=type2]:first",T);expect(U).toEqual([T[2]])});it("should return the first component",function(){var U=G.query("*:first",T);expect(U).toEqual([T[0]])});describe("no items/single item",function(){it("should return an empty array if there are no items",function(){var U=G.query("*:first",[]);expect(U).toEqual([])});it("should return an a single item if it matches",function(){var V=new Ext.Component();var U=G.query("component:first",[V]);expect(U).toEqual([V]);V.destroy()})})});describe("last",function(){it("should return an empty array if no items match",function(){var U=G.query("button:last",T);expect(U).toEqual([])});it("should return the last matching component by type",function(){var U=G.query("component:last",T);expect(U).toEqual([T[4]])});it("should return the first matching component by attribute",function(){var U=G.query("[action=type1]:last",T);expect(U).toEqual([T[1]])});it("should return the first component",function(){var U=G.query("*:last",T);expect(U).toEqual([T[4]])});describe("no items/single item",function(){it("should return an empty array if there are no items",function(){var U=G.query("*:last",[]);expect(U).toEqual([])});it("should return an a single item if it matches",function(){var V=new Ext.Component();var U=G.query("component:last",[V]);expect(U).toEqual([V]);V.destroy()})})})})});describe("attribute value coercion",function(){var T=[{att1:0,att2:0,att3:0,att4:0},{att1:null,att2:false,att3:true,att4:undefined},{att1:0,att2:0,att3:0,att4:0}];if('should coerce "null" to match a null property value',function(){expect(G.query("[att1=null]",T)).toBe(T[1])}){}if('should coerce "false" to match a Boolean property value',function(){expect(G.query("[att2=false]",T)).toBe(T[1])}){}if('should coerce "true" to match a Boolean property value',function(){expect(G.query("[att3=true]",T)).toBe(T[1])}){}if('should coerce "undefined" to match an undefined property value',function(){expect(G.query("[att4=undefined]",T)).toBe(T[1])}){}});describe("ownProperty tests",function(){var U=function(){},T;U.prototype={foo:"bar",bletch:0};T=[new U(),{foo:"bar",bletch:0}];it('should only match candidates [@foo=bar] with ownProperty "foo" equal to "bar"',function(){expect(Ext.ComponentQuery.query("[@foo=bar]",T).length).toBe(1);expect(Ext.ComponentQuery.query("[@foo=bar]",T)[0]).toBe(T[1]);expect(Ext.ComponentQuery.is(T[0],"[@foo=bar]")).toBe(false);expect(Ext.ComponentQuery.is(T[1],"[@foo=bar]")).toBe(true)});it("should not match candidates [bletch] where bletch is a falsy property",function(){expect(Ext.ComponentQuery.query("[bletch]",T).length).toBe(0);expect(Ext.ComponentQuery.is(T[0],"[bletch]")).toBe(false);expect(Ext.ComponentQuery.is(T[1],"[bletch]")).toBe(false)});it("should match candidates [?bletch] where bletch is a falsy property",function(){expect(Ext.ComponentQuery.query("[?bletch]",T).length).toBe(1);expect(Ext.ComponentQuery.query("[?bletch]",T)[0]).toBe(T[1]);expect(Ext.ComponentQuery.is(T[0],"[?bletch]")).toBe(false);expect(Ext.ComponentQuery.is(T[1],"[?bletch]")).toBe(true)})});describe("Querying floating descendants",function(){var T;beforeEach(function(){T=new Ext.container.Container({items:{xtype:"container",floating:true,id:"floating-cq-child",items:{xtype:"container",floating:true,id:"floating-cq-grandchild",items:{floating:true,id:"floating-cq-great-grandchild"}}},renderTo:document.body})});afterEach(function(){T.destroy()});it("should find all descendants",function(){var U=T.query();expect(U.length).toEqual(3);expect(U[0]).toBe(Ext.getCmp("floating-cq-child"));expect(U[1]).toBe(Ext.getCmp("floating-cq-grandchild"));expect(U[2]).toBe(Ext.getCmp("floating-cq-great-grandchild"))});it("should find individual descendants",function(){var U=T.query(">*");expect(U.length).toEqual(1);expect(U[0]).toBe(Ext.getCmp("floating-cq-child"));U=T.query(">>*");expect(U.length).toEqual(1);expect(U[0]).toBe(Ext.getCmp("floating-cq-grandchild"));U=T.query(">>>*");expect(U.length).toEqual(1);expect(U[0]).toBe(Ext.getCmp("floating-cq-great-grandchild"))})});describe("trimming spaces",function(){var T;beforeEach(function(){T=new Ext.container.Container({items:{xtype:"button",text:"Test",action:"selectVendors"},renderTo:document.body})});afterEach(function(){T.destroy();T=null});describe("single space",function(){describe("attribute matching expressions",function(){it("should trim leading space",function(){E=G.query("[action =selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=G.query("[action ^=selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=G.query("[action $=selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors")});it("should trim trailing space",function(){E=G.query("[action= selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=G.query("[action*= selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=G.query("[action~= selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors")});it("should trim both spaces",function(){E=G.query("[action = selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=G.query("[action *= selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=G.query("[action ~= selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors")})})});describe("multiple spaces",function(){describe("attribute matching expressions",function(){it("should trim multiple leading spaces",function(){E=G.query("[action     =selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=G.query("[action     ^=selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=G.query("[action     $=selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors")});it("should trim multiple trailing spaces",function(){E=G.query("[action=      selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=G.query("[action*=      selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=G.query("[action~=      selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors")});it("should trim multiple spaces on both sides",function(){E=G.query("[action      =      selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=G.query("[action      *=      selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors");E=G.query("[action      ~=      selectVendors]",T);expect(E.length).toBe(1);expect(E[0].action).toBe("selectVendors")})});describe("id matching expressions",function(){it("should trim leading spaces",function(){E=G.query(" #child9",L);expect(E.length).toBe(1);expect(E[0].id).toBe(M.id)});it("should trim trailing spaces",function(){E=G.query("#child9 ",L);expect(E.length).toBe(1);expect(E[0].id).toBe(M.id)});it("should trim spaces on both sides",function(){E=G.query("   #child9       ",L);expect(E.length).toBe(1);expect(E[0].id).toBe(M.id)})});describe("descendancy expressions",function(){it("should trim leading spaces",function(){E=G.query(" [layout=card]    [type=B/G/H]",L);expect(E.length).toBe(1);expect(E[0].id).toBe(S.id)});it("should trim trailing spaces",function(){E=G.query("[type=B/G/J]   ^ [layout=hbox]   ",L);expect(E.length).toBe(1);expect(E[0].id).toBe(Q.id)});it("should trim spaces on both sides",function(){E=G.query("     #child4      >       [type=B/C/F]        ",L);expect(E.length).toBe(1);expect(E[0].id).toBe(H.id)})})})});describe("pre- and postOrder",function(){var T=false;afterEach(function(){T=false;G.cache.clear()});describe("preOrder",function(){it("should call the fn regardless of whether the selector has been cached",function(){expect(G.cache.get("")).toBeUndefined();G.visitPreOrder("",this,function(){T=true});expect(T).toBe(true)})});describe("postOrder",function(){it("should call the fn regardless of whether the selector has been cached",function(){expect(G.cache.get("")).toBeUndefined();G.visitPostOrder("",this,function(){T=true});expect(T).toBe(true)})})})});