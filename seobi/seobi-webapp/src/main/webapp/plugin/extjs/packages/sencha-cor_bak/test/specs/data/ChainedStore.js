describe("Ext.data.ChainedStore",function(){var M={},C,H,J,N,Q,I,D,B,K,F,P;function R(){K.add(D,Q,I,B);J=K.getAt(0);C=K.getAt(1);H=K.getAt(2);N=K.getAt(3)}function G(S,T){if(Ext.isObject(S)){T=S}else{T=T||{};if(!T.email){T.email=S}}return new P(T)}function E(S){S=S||{};K=new Ext.data.Store(Ext.applyIf(S,{model:"spec.User"}))}function A(S){F=new Ext.data.ChainedStore(Ext.apply({source:K},S))}function L(S){Ext.Ajax.mockComplete({status:200,responseText:Ext.JSON.encode(S)})}function O(U,T){var V=U.length,S;for(S=0;S<V;++S){expect(T.getAt(S)).toBe(U[S])}}beforeEach(function(){MockAjaxManager.addMethods();D={name:"Ed Spencer",email:"ed@sencha.com",evilness:100,group:"code",old:false,age:25,valid:"yes"};Q={name:"Abe Elias",email:"abe@sencha.com",evilness:70,group:"admin",old:false,age:20,valid:"yes"};I={name:"Aaron Conran",email:"aaron@sencha.com",evilness:5,group:"admin",old:true,age:26,valid:"yes"};B={name:"Tommy Maintz",email:"tommy@sencha.com",evilness:-15,group:"code",old:true,age:70,valid:"yes"};P=Ext.define("spec.User",{extend:"Ext.data.Model",idProperty:"email",fields:[{name:"name",type:"string"},{name:"email",type:"string"},{name:"evilness",type:"int"},{name:"group",type:"string"},{name:"old",type:"boolean"},{name:"valid",type:"string"},{name:"age",type:"int"}]});E();R()});afterEach(function(){MockAjaxManager.removeMethods();Ext.data.Model.schema.clear();Ext.undefine("spec.User");if(K){K.destroy()}F.destroy();P=K=F=null});describe("constructing",function(){it("should inherit the model from the backing store",function(){A();expect(F.getModel()).toBe(P)});it("should have the data from the backing store",function(){A();var U=K.getRange(),S=F.getRange(),V=U.length,T;expect(S.length).toBe(U.length);for(T=0;T<V;++T){expect(S[T]).toBe(U[T])}});it("should not fire a refresh or datachanged event",function(){var S=jasmine.createSpy();A({listeners:{refresh:S,datachanged:S}});expect(S).not.toHaveBeenCalled()});it("should accept an id of a store as the source",function(){var S=new Ext.data.Store({model:"spec.User",storeId:"sourceId"});K="sourceId";A();K=null;expect(F.getSource()).toBe(S);S.destroy()})});it("should not join the records to the store",function(){A();var S=J.joined;expect(S.length).toBe(1);expect(S[0]).toBe(K)});describe("sorting",function(){describe("initial values",function(){it("should default to having no sorters",function(){A();expect(F.getSorters().getCount()).toBe(0)});it("should not inherit sorters from the source store",function(){K.sort("age","DESC");A();expect(F.getSorters().getCount()).toBe(0)});it("should have the data in order of the source store by default",function(){K.sort("age","DESC");A();expect(F.first()).toBe(K.first());expect(F.getAt(1)).toBe(K.getAt(1));expect(F.getAt(2)).toBe(K.getAt(2));expect(F.last()).toBe(K.last())})});describe("sorting the source",function(){it("should not change the sort order in the store",function(){A();K.sort("name","DESC");O([N,J,C,H],K);O([J,C,H,N],F)})});describe("sorting the store",function(){it("should not change the sort order in the source store",function(){A();F.sort("name","DESC");O([N,J,C,H],F);O([J,C,H,N],K)})})});describe("filtering",function(){describe("filtering the source",function(){it("should also filter the store",function(){A();K.filter("group","code");expect(F.getCount()).toBe(2);O(K.getRange(),F)});it("should not affect the store filter collection",function(){A();K.filter("group","code");expect(F.getFilters().getCount()).toBe(0)});it("should also unfilter the store",function(){A();K.filter("group","code");K.getFilters().removeAll();expect(F.getCount()).toBe(4);O(K.getRange(),F)});it("should have a record present in the store when added to the source but filtered out",function(){A();K.filter("group","code");var S=G("foo@sencha.com",{group:"admin"});K.add(S);K.getFilters().removeAll();expect(F.indexOf(S)).toBe(4)});describe("events",function(){it("should fire the refresh event on the store",function(){var S=jasmine.createSpy();A();F.on("refresh",S);K.filter("group","code");expect(S).toHaveBeenCalled();expect(S.callCount).toBe(1)});it("should fire the datachanged event on the store",function(){var S=jasmine.createSpy();A();F.on("datachanged",S);K.filter("group","code");expect(S).toHaveBeenCalled();expect(S.callCount).toBe(1)});it("should not fire the filterchange event",function(){var S=jasmine.createSpy();A();F.on("filterchange",S);K.filter("group","code");expect(S).not.toHaveBeenCalled()})})});describe("filtering the store",function(){it("should not filter the source",function(){A();F.filter("group","code");expect(F.getCount()).toBe(2);expect(K.getCount()).toBe(4)});it("should not affect the source filter collection",function(){A();F.filter("group","code");expect(K.getFilters().getCount()).toBe(0)});it("should filter based off source filters when the source is filtered",function(){A();K.filter("group","code");F.filter("name","Tommy");expect(F.getCount()).toBe(1);expect(F.first()).toBe(N)});it("should apply source filters over current filters",function(){A();F.getFilters().add({property:"age",value:70,operator:"<"});expect(F.getCount()).toBe(3);K.filter("group","admin");expect(F.getCount()).toBe(2);O([C,H],F)});describe("events",function(){it("should fire the refresh event",function(){var S=jasmine.createSpy();A();F.on("refresh",S);F.filter("group","code");expect(S).toHaveBeenCalled();expect(S.callCount).toBe(1)});it("should fire the datachanged event",function(){var S=jasmine.createSpy();A();F.on("datachanged",S);F.filter("group","code");expect(S).toHaveBeenCalled();expect(S.callCount).toBe(1)});it("should fire the filterchange event",function(){var S=jasmine.createSpy();A();F.on("filterchange",S);F.filter("group","code");expect(S).toHaveBeenCalled();expect(S.callCount).toBe(1)})})})});describe("loading",function(){describe("via load",function(){it("should populate the store",function(){K.removeAll();A();K.load();L([Q,B,D,I]);O(K.getRange(),F)});it("should clear any existing data",function(){A();K.load();L([{id:"foo@sencha.com"}]);expect(F.getCount()).toBe(1);expect(F.first()).toBe(K.first())});it("should not fire the add event",function(){K.removeAll();A();var S=jasmine.createSpy();F.on("add",S);K.load();L([Q,B,D,I]);expect(S).not.toHaveBeenCalled()});it("should not fire the remove event",function(){A();var S=jasmine.createSpy();F.on("remove",S);K.load();L([Q,B,D,I]);expect(S).not.toHaveBeenCalled()});it("should fire the refresh and datachanged event",function(){A();var T=jasmine.createSpy(),S=jasmine.createSpy();F.on("refresh",S);F.on("datachanged",T);K.load();L([Q,B,D,I]);expect(S).toHaveBeenCalled();expect(S.mostRecentCall.args[0]).toBe(F);expect(T).toHaveBeenCalled();expect(T.mostRecentCall.args[0]).toBe(F)})});describe("via loadData",function(){it("should populate the store",function(){K.removeAll();A();K.loadData([D,B,I,Q]);O(K.getRange(),F)});it("should clear any existing data",function(){A();K.loadData([{id:"foo@sencha.com"}]);expect(F.getCount()).toBe(1);expect(F.first()).toBe(K.first())});it("should not fire the add event",function(){K.removeAll();A();var S=jasmine.createSpy();F.on("add",S);K.loadData([D,B,I,Q]);expect(S).not.toHaveBeenCalled()});it("should not fire the remove event",function(){A();var S=jasmine.createSpy();F.on("remove",S);K.loadData([D,B,I,Q]);expect(S).not.toHaveBeenCalled()});it("should fire the refresh and datachanged event",function(){A();var T=jasmine.createSpy(),S=jasmine.createSpy();F.on("refresh",S);F.on("datachanged",T);K.loadData([D,B,I,Q]);expect(S).toHaveBeenCalled();expect(S.mostRecentCall.args[0]).toBe(F);expect(T).toHaveBeenCalled();expect(T.mostRecentCall.args[0]).toBe(F)})});describe("via loadRawData",function(){it("should populate the store",function(){K.removeAll();A();K.loadRawData([D,B,I,Q]);O(K.getRange(),F)});it("should clear any existing data",function(){A();K.loadRawData([{id:"foo@sencha.com"}]);expect(F.getCount()).toBe(1);expect(F.first()).toBe(K.first())});it("should not fire the add event",function(){K.removeAll();A();var S=jasmine.createSpy();F.on("add",S);K.loadRawData([D,B,I,Q]);expect(S).not.toHaveBeenCalled()});it("should not fire the remove event",function(){A();var S=jasmine.createSpy();F.on("remove",S);K.loadRawData([D,B,I,Q]);expect(S).not.toHaveBeenCalled()});it("should fire the refresh and datachanged event",function(){A();var T=jasmine.createSpy(),S=jasmine.createSpy();F.on("refresh",S);F.on("datachanged",T);K.loadRawData([D,B,I,Q]);expect(S).toHaveBeenCalled();expect(S.mostRecentCall.args[0]).toBe(F);expect(T).toHaveBeenCalled();expect(T.mostRecentCall.args[0]).toBe(F)})});describe("with sorters",function(){it("should apply sorters from the store",function(){K.removeAll();A();F.sort("name","DESC");K.load();L([Q,D,B,I]);expect(F.getAt(0).id).toBe("tommy@sencha.com");expect(F.getAt(1).id).toBe("ed@sencha.com");expect(F.getAt(2).id).toBe("abe@sencha.com");expect(F.getAt(3).id).toBe("aaron@sencha.com")})});describe("filters",function(){it("should apply filters from the store",function(){K.removeAll();A();F.getFilters().add({property:"group",value:"code"});K.load();L([Q,D,B,I]);expect(F.getCount()).toBe(2);expect(F.first().id).toBe("ed@sencha.com");expect(F.last().id).toBe("tommy@sencha.com")})})});describe("adding",function(){beforeEach(function(){A()});describe("adding to the source",function(){it("should also add to the store",function(){var S=K.add({id:"new@sencha.com"})[0];expect(F.last()).toBe(S)});it("should fire the add/datachanged event on the store",function(){var T=jasmine.createSpy(),U=jasmine.createSpy(),S,V;F.on("add",T);F.on("datachanged",U);S=K.add({id:"new@sencha.com"})[0];expect(T).toHaveBeenCalled();V=T.mostRecentCall.args;expect(V[0]).toBe(F);expect(V[1]).toEqual([S]);expect(V[2]).toBe(4);expect(U).toHaveBeenCalled();expect(U.mostRecentCall.args[0]).toBe(F)});it("should fire add on the source, then the store",function(){var S=[];K.on("add",function(){S.push("source")});F.on("add",function(){S.push("store")});K.add({id:"foo@sencha.com"});expect(S).toEqual(["source","store"])});describe("with sorting",function(){it("should insert into the correct position",function(){F.sort("email");var S=K.add({email:"aaaa@sencha.com"})[0];expect(F.first()).toBe(S)})});describe("with filtering",function(){it("should filter out non-matching records",function(){F.filter("group","admin");var S=K.add({email:"new@sencha.com",group:"code"})[0];expect(F.indexOf(S)).toBe(-1)});it("should include the filtered out record when filters are cleared",function(){F.filter("group","admin");var S=K.add({email:"new@sencha.com",group:"code"})[0];F.getFilters().removeAll();expect(K.last()).toBe(S)})})});describe("adding to the store",function(){it("should also add the record to the source",function(){var S=F.add({id:"new@sencha.com"})[0];expect(K.last()).toBe(S)});it("should fire the add/datachanged event on the source",function(){var T=jasmine.createSpy(),U=jasmine.createSpy();K.on("add",T);K.on("datachanged",U);var S=F.add({id:"new@sencha.com"})[0],V;expect(T).toHaveBeenCalled();V=T.mostRecentCall.args;expect(V[0]).toBe(K);expect(V[1]).toEqual([S]);expect(V[2]).toBe(4);expect(U).toHaveBeenCalled();expect(U.mostRecentCall.args[0]).toBe(K)});it("should fire add on the source, then the store",function(){var S=[];K.on("add",function(){S.push("source")});F.on("add",function(){S.push("store")});F.add({id:"foo@sencha.com"});expect(S).toEqual(["source","store"])})})});describe("removing",function(){beforeEach(function(){A()});describe("remove",function(){describe("removing from the source",function(){it("should also remove from the store",function(){K.removeAt(0);expect(F.indexOf(J)).toBe(-1)});it("should fire the remove/datachanged event on the store",function(){var T=jasmine.createSpy(),S=jasmine.createSpy(),U;F.on("remove",T);F.on("datachanged",S);F.remove(J);expect(T).toHaveBeenCalled();U=T.mostRecentCall.args;expect(U[0]).toBe(F);expect(U[1]).toEqual([J]);expect(U[2]).toBe(0);expect(S).toHaveBeenCalled();expect(S.mostRecentCall.args[0]).toBe(F)});it("should fire remove on the source, then the store",function(){var S=[];K.on("remove",function(){S.push("source")});F.on("remove",function(){S.push("store")});K.removeAt(0);expect(S).toEqual(["source","store"])});describe("with filtering",function(){it("should remove from the store when record is filtered out",function(){F.filter("group","admin");K.remove(J);F.getFilters().removeAll();expect(F.indexOf(J)).toBe(-1)})})});describe("removing from the store",function(){it("should also remove the record from the source",function(){F.remove(J);expect(K.indexOf(J)).toBe(-1)});it("should fire the add/datachanged event on the source",function(){var T=jasmine.createSpy(),S=jasmine.createSpy(),U;K.on("remove",T);K.on("datachanged",S);F.remove(J);expect(T).toHaveBeenCalled();U=T.mostRecentCall.args;expect(U[0]).toBe(K);expect(U[1]).toEqual([J]);expect(U[2]).toBe(0);expect(S).toHaveBeenCalled();expect(S.mostRecentCall.args[0]).toBe(K)});it("should fire add on the source, then the store",function(){var S=[];K.on("remove",function(){S.push("source")});F.on("remove",function(){S.push("store")});F.remove(J);expect(S).toEqual(["source","store"])})})});describe("removeAll",function(){it("should not fire a remove event",function(){var S=jasmine.createSpy();F.on("remove",S);K.removeAll();expect(S).not.toHaveBeenCalled()});it("should fire the clear event",function(){var S=jasmine.createSpy();F.on("clear",S);K.removeAll();expect(S).toHaveBeenCalled();expect(S.mostRecentCall.args[0]).toBe(F)});it("should fire the datachanged event",function(){var S=jasmine.createSpy();F.on("datachanged",S);K.removeAll();expect(S).toHaveBeenCalled();expect(S.mostRecentCall.args[0]).toBe(F)});describe("with silent: true",function(){it("should not fire the clear event",function(){var S=jasmine.createSpy();F.on("clear",S);K.removeAll(true);expect(S).not.toHaveBeenCalled()});it("should not fire the datachanged event",function(){var S=jasmine.createSpy();F.on("datachanged",S);K.removeAll(true);expect(S).not.toHaveBeenCalled()})})})});describe("updating",function(){beforeEach(function(){A()});it("should fire the update event on the source & pass the store, record, type & modified fields",function(){var S=jasmine.createSpy(),T;K.on("update",S);C.set("name","foo");expect(S).toHaveBeenCalled();expect(S.callCount).toBe(1);T=S.mostRecentCall.args;expect(T[0]).toBe(K);expect(T[1]).toBe(C);expect(T[2]).toBe(Ext.data.Model.EDIT);expect(T[3]).toEqual(["name"])});it("should fire the update event on the store & pass the store, record, type & modified fields",function(){var S=jasmine.createSpy(),T;F.on("update",S);C.set("name","foo");expect(S).toHaveBeenCalled();expect(S.callCount).toBe(1);T=S.mostRecentCall.args;expect(T[0]).toBe(F);expect(T[1]).toBe(C);expect(T[2]).toBe(Ext.data.Model.EDIT);expect(T[3]).toEqual(["name"])});it("should fire the event on the source first, then the store",function(){var S=[];K.on("update",function(){S.push("source")});F.on("update",function(){S.push("store")});J.set("name","foo");expect(S).toEqual(["source","store"])})})});