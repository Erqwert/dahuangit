describe("Ext.Widget",function(){var C;function A(E,D){Ext.define("spec.Widget",Ext.apply({extend:"Ext.Widget"},D));if(!E){new spec.Widget()}}afterEach(function(){if(C){C.destroy()}Ext.undefine("spec.Widget")});function B(D){describe(D?"first instance":"second instance",function(){it("should have an element when 'element' reference is defined on the main element",function(){A(D);C=new spec.Widget();expect(C.element instanceof Ext.dom.Element).toBe(true);expect(C.el).toBe(C.element)});if(D){it("should throw an error when no 'element' reference is defined",function(){A(D,{element:{}});function E(){new spec.Widget()}expect(E).toThrow("No 'element' reference found in 'spec.Widget' template.")});it("should throw an error if multiple 'element' references are defined",function(){A(D,{element:{reference:"element",children:[{reference:"element"}]}});function E(){new spec.Widget()}expect(E).toThrow("Duplicate 'element' reference detected in 'spec.Widget' template.")})}it("should allow the 'element' reference to be a descendant of the main template element",function(){A(D,{element:{children:[{cls:"foo",reference:"element"}]}});C=new spec.Widget();expect(C.element.dom.className).toBe("foo")});it("should resolve element references, and remove the 'reference' attributes from the dom",function(){A(D,{element:{reference:"element",children:[{cls:"foo",reference:"foo",children:[{cls:"baz",reference:"baz"}]},{cls:"bar",reference:"bar"}]}});C=new spec.Widget();expect(C.foo instanceof Ext.dom.Element).toBe(true);expect(C.foo.dom.className).toBe("foo");expect(C.foo.dom.getAttribute("reference")).toBeNull();expect(C.bar instanceof Ext.dom.Element).toBe(true);expect(C.bar.dom.className).toBe("bar");expect(C.bar.dom.getAttribute("reference")).toBeNull();expect(C.baz instanceof Ext.dom.Element).toBe(true);expect(C.baz.dom.className).toBe("baz");expect(C.baz.dom.getAttribute("reference")).toBeNull();expect(C.element.dom.getAttribute("reference")).toBeNull()});it("should set skipGarbageCollection on element references",function(){A(D,{element:{reference:"element",children:[{reference:"foo"}]}});C=new spec.Widget();expect(C.element.skipGarbageCollection).toBe(true);expect(C.foo.skipGarbageCollection).toBe(true)});it("should generate an id if not configured",function(){A(D);C=new spec.Widget();expect(C.id).toBeDefined();expect(C.element.id).toBe(C.id)});it("should use configured id",function(){var E="my-widget";A(D);C=new spec.Widget({id:E});expect(C.id).toBe(E);expect(C.element.id).toBe(E)});it("should add a listener to the main element",function(){var E;A(D,{element:{reference:"element",listeners:{click:"onClick"}},onClick:function(){E=this}});C=new spec.Widget();Ext.getBody().appendChild(C.element);spyOn(C,"onClick").andCallThrough();jasmine.fireMouseEvent(C.element,"click");expect(C.onClick).toHaveBeenCalled();expect(E).toBe(C);C.destroy()});it("should add listeners to child elements",function(){var F,H,E,G;A(D,{element:{reference:"element",children:[{reference:"foo",listeners:{click:"fooClick"}},{cls:"bar",reference:"bar",listeners:{click:{fn:"barClick"}},children:[{reference:"baz",listeners:{click:"bazClick"},scope:{}},{reference:"jazz",listeners:{click:{fn:"jazzClick",scope:{}}}}]}]},fooClick:function(){F=this},barClick:function(){H=this},bazClick:function(){E=this},jazzClick:function(){G=this}});C=new spec.Widget();Ext.getBody().appendChild(C.element);spyOn(C,"fooClick").andCallThrough();spyOn(C,"barClick").andCallThrough();spyOn(C,"bazClick").andCallThrough();spyOn(C,"jazzClick").andCallThrough();jasmine.fireMouseEvent(C.foo,"click");expect(C.fooClick).toHaveBeenCalled();expect(F).toBe(C);jasmine.fireMouseEvent(C.bar,"click");expect(C.barClick).toHaveBeenCalled();expect(H).toBe(C);jasmine.fireMouseEvent(C.baz,"click");expect(C.bazClick).toHaveBeenCalled();expect(E).toBe(C);jasmine.fireMouseEvent(C.jazz,"click");expect(C.jazzClick).toHaveBeenCalled();expect(G).toBe(C);C.destroy()})})}B(true);B(false)});