describe("Ext.Element.insertion",function(){var A,B,C,E,D;beforeEach(function(){A=Ext.getBody().createChild({id:"ExtElementHelper",children:[{id:"child1"},{id:"child2"},{id:"child3"}]});B=Ext.getBody().createChild({id:"ExtElementSpanHelper",tag:"span"});C=Ext.get("child1");E=Ext.get("child2");D=Ext.get("child3")});afterEach(function(){A.destroy();B.destroy();C.destroy();E.destroy();D.destroy()});describe("appendChild",function(){it("should append the child",function(){expect(A.contains(B)).toBeFalsy();A.appendChild(B);expect(A.contains(B)).toBeTruthy()})});describe("appendTo",function(){it("should append the el to the specified el",function(){expect(B.contains(A)).toBeFalsy();A.appendTo(B);expect(B.contains(A)).toBeTruthy()})});describe("insertBefore",function(){it("should insert the el before the specified el",function(){var G=Ext.getDom(C).parentNode.childNodes,F=Ext.toArray(G);expect(Ext.Array.indexOf(F,Ext.getDom(E))).toEqual(1);E.insertBefore(C);G=Ext.getDom(C).parentNode.childNodes;F=Ext.toArray(G);expect(Ext.Array.indexOf(F,Ext.getDom(E))).toEqual(0)})});describe("insertAfter",function(){it("should insert the el after the specified el",function(){var G=Ext.getDom(C).parentNode.childNodes,F=Ext.toArray(G);expect(Ext.Array.indexOf(F,Ext.getDom(E))).toEqual(1);E.insertAfter(D);G=Ext.getDom(C).parentNode.childNodes;F=Ext.toArray(G);expect(Ext.Array.indexOf(F,Ext.getDom(E))).toEqual(2)})});describe("insertFirst",function(){it("should insert the el into the specified el",function(){var F=Ext.getDom(E).childNodes;expect(F.length).toEqual(0);E.insertFirst(C);F=Ext.getDom(E).childNodes;expect(F.length).toEqual(1)})});describe("insertSibling",function(){afterEach(function(){var G=Ext.get("sibling1"),F=Ext.get("sibling2");if(G){G.destroy()}if(F){F.destroy()}});describe("when array",function(){describe("after",function(){it("should create each of the elements and add them to the el parent",function(){var F=Ext.getDom(A).childNodes;expect(F.length).toEqual(3);C.insertSibling([{id:"sibling1"},{id:"sibling2"}],"after");F=Ext.getDom(A).childNodes;expect(F.length).toEqual(5)})});describe("before",function(){it("should create each of the elements and add them to the el parent",function(){var F=Ext.getDom(A).childNodes;expect(F.length).toEqual(3);C.insertSibling([{id:"sibling1"},{id:"sibling2"}],"before");F=Ext.getDom(A).childNodes;expect(F.length).toEqual(5)})})});describe("when Ext.Element",function(){describe("after",function(){it("should move the element next to the el",function(){var F=Ext.getDom(A).childNodes;expect(F.length).toEqual(3);C.insertSibling(B,"after");F=Ext.getDom(A).childNodes;expect(F.length).toEqual(4)})});describe("before",function(){it("should move the element next to the el",function(){var F=Ext.getDom(A).childNodes;expect(F.length).toEqual(3);C.insertSibling(B,"before");F=Ext.getDom(A).childNodes;expect(F.length).toEqual(4)})})});describe("other",function(){describe("after",function(){it("should move the element next to the el",function(){var F=Ext.getDom(A).childNodes;expect(F.length).toEqual(3);C.insertSibling({id:"sibling1"},"after");F=Ext.getDom(A).childNodes;expect(F.length).toEqual(4)})});describe("before",function(){it("should move the element next to the el",function(){var F=Ext.getDom(A).childNodes;expect(F.length).toEqual(3);C.insertSibling({id:"sibling1"},"before");F=Ext.getDom(A).childNodes;expect(F.length).toEqual(4)});describe("return dom",function(){it("should move the element next to the el",function(){var G=Ext.getDom(A).childNodes,F;expect(G.length).toEqual(3);F=C.insertSibling({id:"sibling1"},"before",true);G=Ext.getDom(A).childNodes;expect(G.length).toEqual(4);expect(F).toBeDefined()})})})})});describe("replace",function(){it("should replace the passed element with this element",function(){var F=Ext.getDom(A).childNodes;expect(F.length).toEqual(3);C.replace(E);F=Ext.getDom(A).childNodes;expect(F.length).toEqual(2)})});describe("replaceWith",function(){it("should replace this element with the passed element config",function(){var F=Ext.getDom(A).childNodes;expect(F.length).toEqual(3);C.replaceWith({tag:"div",cls:"childtestdiv"});expect(C.hasCls("childtestdiv"));F=Ext.getDom(A).childNodes;expect(F.length).toEqual(3)});it("should replace this element with the passed Ext.Element",function(){var F=A.insertSibling({tag:"div",cls:"newNode"});C.replaceWith(F);expect(F.dom.parentNode).toBe(A.dom);expect(Ext.getDom(A).childNodes.length).toEqual(3)});it("should replace this element with the passed dom element",function(){var F=A.insertSibling({tag:"div",cls:"newNode"});C.replaceWith(F.dom);expect(F.dom.parentNode).toBe(A.dom);expect(Ext.getDom(A).childNodes.length).toEqual(3)});it("should replace this element with the passed element id",function(){var F=A.insertSibling({tag:"div",cls:"newNode",id:"replaceWithId"});C.replaceWith("replaceWithId");expect(F.dom.parentNode).toBe(A.dom);expect(Ext.getDom(A).childNodes.length).toEqual(3)})});describe("createChild",function(){afterEach(function(){Ext.get("child4").destroy()});it("should create a child",function(){var F=Ext.getDom(A).childNodes;expect(F.length).toEqual(3);A.createChild({id:"child4"});F=Ext.getDom(A).childNodes;expect(F.length).toEqual(4)});it("should create a child before an el",function(){var G=Ext.getDom(A).childNodes,F=Ext.toArray(G);expect(G.length).toEqual(3);expect(Ext.Array.indexOf(F,Ext.getDom(E))).toEqual(1);A.createChild({id:"child4"},E);G=Ext.getDom(A).childNodes;F=Ext.toArray(G);expect(G.length).toEqual(4);expect(Ext.Array.indexOf(F,Ext.getDom(E))).toEqual(2)})});describe("wrap",function(){it("should wrap the element",function(){var F=Ext.getDom(C).parentNode;C.wrap({cls:"wrapper"});expect(Ext.getDom(C).parentNode.parentNode).toEqual(F);expect(Ext.getDom(C).parentNode.className).toEqual("wrapper")});it("return the el",function(){var F=C.wrap({cls:"wrapper"});expect(Ext.isElement(F)).toBeFalsy()});it("return the dom",function(){var F=C.wrap({cls:"wrapper"},true);expect(Ext.isElement(F)).toBeTruthy()})});describe("insertHtml",function(){describe("beforeBegin",function(){it("should insert the html",function(){expect(Ext.getDom(A).childNodes.length).toEqual(3);C.insertHtml("beforeBegin","<div></div>");expect(Ext.getDom(A).childNodes.length).toEqual(4)})});describe("afterBegin",function(){it("should insert the html",function(){expect(Ext.getDom(C).childNodes.length).toEqual(0);C.insertHtml("afterBegin","<div></div>");expect(Ext.getDom(C).childNodes.length).toEqual(1)})});describe("beforeEnd",function(){it("should insert the html",function(){expect(Ext.getDom(C).childNodes.length).toEqual(0);C.insertHtml("beforeEnd","<div></div>");expect(Ext.getDom(C).childNodes.length).toEqual(1)})});describe("afterEnd",function(){it("should insert the html",function(){expect(Ext.getDom(A).childNodes.length).toEqual(3);C.insertHtml("afterEnd","<div></div>");expect(Ext.getDom(A).childNodes.length).toEqual(4)})});it("should return a dom",function(){var F=C.insertHtml("afterEnd","<div></div>");expect(Ext.isElement(F)).toBeTruthy()});it("should return an el",function(){var F=C.insertHtml("afterEnd","<div></div>",true);expect(Ext.isElement(F)).toBeFalsy()})})},"/src/dom/Element.insertion.js");