describe("Ext.data.validator.Presence",function(){var B;function A(C){B=new Ext.data.validator.Presence();return B.validate(C)}afterEach(function(){B=null});describe("invalid values",function(){it("should not validate if the value is undefined",function(){expect(A(undefined)).toBe(B.getMessage())});it("should not validate if the value is null",function(){expect(A(null)).toBe(B.getMessage())})});describe("valid values",function(){it("should validate if passed an empty string",function(){expect(A("")).toBe(true)});it("should validate if passed false",function(){expect(A(false)).toBe(true)});it("should validate if passed 0",function(){expect(A(0)).toBe(true)});it("should validate a string",function(){expect(A("foo")).toBe(true)});it("should validate a number",function(){expect(A(100)).toBe(true)});it("should validate an array",function(){expect(A([])).toBe(true)});it("should validate an object",function(){expect(A({})).toBe(true)});it("should validate a date",function(){expect(A(new Date())).toBe(true)})});describe("messages",function(){it("should accept a custom message",function(){B=new Ext.data.validator.Presence({message:"Foo"});expect(B.validate(undefined)).toBe("Foo")})})});